// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: weapons.proto
// Protobuf C++ Version: 5.27.3

#include "weapons.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace github {
namespace nkibler7 {
namespace osrswikiscraper {

inline constexpr RangedCombatOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : attack_style_{static_cast< ::github::nkibler7::osrswikiscraper::RangedCombatOption_RangedAttackStyle >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RangedCombatOption::RangedCombatOption(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RangedCombatOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangedCombatOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangedCombatOptionDefaultTypeInternal() {}
  union {
    RangedCombatOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangedCombatOptionDefaultTypeInternal _RangedCombatOption_default_instance_;

inline constexpr MeleeCombatOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : attack_style_{static_cast< ::github::nkibler7::osrswikiscraper::MeleeCombatOption_MeleeAttackStyle >(0)},
        attack_type_{static_cast< ::github::nkibler7::osrswikiscraper::MeleeCombatOption_MeleeAttackType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeleeCombatOption::MeleeCombatOption(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MeleeCombatOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeleeCombatOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeleeCombatOptionDefaultTypeInternal() {}
  union {
    MeleeCombatOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeleeCombatOptionDefaultTypeInternal _MeleeCombatOption_default_instance_;

inline constexpr MagicCombatOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : attack_style_{static_cast< ::github::nkibler7::osrswikiscraper::MagicCombatOption_MagicAttackStyle >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MagicCombatOption::MagicCombatOption(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MagicCombatOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MagicCombatOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MagicCombatOptionDefaultTypeInternal() {}
  union {
    MagicCombatOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MagicCombatOptionDefaultTypeInternal _MagicCombatOption_default_instance_;

inline constexpr CombatOption_Modifiers::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : attack_modifier_{0},
        strength_modifier_{0},
        defence_modifier_{0},
        ranged_modifier_{0},
        magic_modifier_{0},
        attack_speed_modifier_{0},
        attack_range_modifier_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CombatOption_Modifiers::CombatOption_Modifiers(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CombatOption_ModifiersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CombatOption_ModifiersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CombatOption_ModifiersDefaultTypeInternal() {}
  union {
    CombatOption_Modifiers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CombatOption_ModifiersDefaultTypeInternal _CombatOption_Modifiers_default_instance_;

inline constexpr CombatOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        modifiers_{nullptr},
        combat_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CombatOption::CombatOption(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CombatOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CombatOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CombatOptionDefaultTypeInternal() {}
  union {
    CombatOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CombatOptionDefaultTypeInternal _CombatOption_default_instance_;

inline constexpr Weapon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        combat_options_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stat_bonuses_{nullptr},
        id_{0},
        base_attack_speed_{0},
        base_attack_range_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Weapon::Weapon(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WeaponDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeaponDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeaponDefaultTypeInternal() {}
  union {
    Weapon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeaponDefaultTypeInternal _Weapon_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Weapons_WeaponsEntry_DoNotUse::Weapons_WeaponsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct Weapons_WeaponsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Weapons_WeaponsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Weapons_WeaponsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Weapons_WeaponsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Weapons_WeaponsEntry_DoNotUseDefaultTypeInternal _Weapons_WeaponsEntry_DoNotUse_default_instance_;

inline constexpr Weapons::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : weapons_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Weapons::Weapons(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WeaponsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeaponsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeaponsDefaultTypeInternal() {}
  union {
    Weapons _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeaponsDefaultTypeInternal _Weapons_default_instance_;
}  // namespace osrswikiscraper
}  // namespace nkibler7
}  // namespace github
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_weapons_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_weapons_2eproto = nullptr;
const ::uint32_t
    TableStruct_weapons_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapons_WeaponsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapons_WeaponsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapons_WeaponsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapons_WeaponsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapons, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapons, _impl_.weapons_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapon, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapon, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapon, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapon, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapon, _impl_.base_attack_speed_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapon, _impl_.base_attack_range_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapon, _impl_.stat_bonuses_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::Weapon, _impl_.combat_options_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers, _impl_.attack_modifier_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers, _impl_.strength_modifier_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers, _impl_.defence_modifier_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers, _impl_.ranged_modifier_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers, _impl_.magic_modifier_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers, _impl_.attack_speed_modifier_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers, _impl_.attack_range_modifier_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption, _impl_.modifiers_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption, _impl_.combat_type_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::MeleeCombatOption, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::MeleeCombatOption, _impl_.attack_style_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::MeleeCombatOption, _impl_.attack_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::RangedCombatOption, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::RangedCombatOption, _impl_.attack_style_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::MagicCombatOption, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::MagicCombatOption, _impl_.attack_style_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::github::nkibler7::osrswikiscraper::Weapons_WeaponsEntry_DoNotUse)},
        {12, -1, -1, sizeof(::github::nkibler7::osrswikiscraper::Weapons)},
        {21, 35, -1, sizeof(::github::nkibler7::osrswikiscraper::Weapon)},
        {41, -1, -1, sizeof(::github::nkibler7::osrswikiscraper::CombatOption_Modifiers)},
        {56, 70, -1, sizeof(::github::nkibler7::osrswikiscraper::CombatOption)},
        {75, -1, -1, sizeof(::github::nkibler7::osrswikiscraper::MeleeCombatOption)},
        {85, -1, -1, sizeof(::github::nkibler7::osrswikiscraper::RangedCombatOption)},
        {94, -1, -1, sizeof(::github::nkibler7::osrswikiscraper::MagicCombatOption)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::github::nkibler7::osrswikiscraper::_Weapons_WeaponsEntry_DoNotUse_default_instance_._instance,
    &::github::nkibler7::osrswikiscraper::_Weapons_default_instance_._instance,
    &::github::nkibler7::osrswikiscraper::_Weapon_default_instance_._instance,
    &::github::nkibler7::osrswikiscraper::_CombatOption_Modifiers_default_instance_._instance,
    &::github::nkibler7::osrswikiscraper::_CombatOption_default_instance_._instance,
    &::github::nkibler7::osrswikiscraper::_MeleeCombatOption_default_instance_._instance,
    &::github::nkibler7::osrswikiscraper::_RangedCombatOption_default_instance_._instance,
    &::github::nkibler7::osrswikiscraper::_MagicCombatOption_default_instance_._instance,
};
const char descriptor_table_protodef_weapons_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rweapons.proto\022\037github.nkibler7.osrswik"
    "iscraper\032\022stat_bonuses.proto\"\252\001\n\007Weapons"
    "\022F\n\007weapons\030\001 \003(\01325.github.nkibler7.osrs"
    "wikiscraper.Weapons.WeaponsEntry\032W\n\014Weap"
    "onsEntry\022\013\n\003key\030\001 \001(\005\0226\n\005value\030\002 \001(\0132\'.g"
    "ithub.nkibler7.osrswikiscraper.Weapon:\0028"
    "\001\"\343\001\n\006Weapon\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\031"
    "\n\021base_attack_speed\030\003 \001(\005\022\031\n\021base_attack"
    "_range\030\004 \001(\005\022B\n\014stat_bonuses\030\005 \001(\0132,.git"
    "hub.nkibler7.osrswikiscraper.StatBonuses"
    "\022E\n\016combat_options\030\006 \003(\0132-.github.nkible"
    "r7.osrswikiscraper.CombatOption\"\223\004\n\014Comb"
    "atOption\022\014\n\004name\030\001 \001(\t\022J\n\tmodifiers\030\002 \001("
    "\01327.github.nkibler7.osrswikiscraper.Comb"
    "atOption.Modifiers\022C\n\005melee\030\003 \001(\01322.gith"
    "ub.nkibler7.osrswikiscraper.MeleeCombatO"
    "ptionH\000\022E\n\006ranged\030\004 \001(\01323.github.nkibler"
    "7.osrswikiscraper.RangedCombatOptionH\000\022C"
    "\n\005magic\030\005 \001(\01322.github.nkibler7.osrswiki"
    "scraper.MagicCombatOptionH\000\032\310\001\n\tModifier"
    "s\022\027\n\017attack_modifier\030\001 \001(\005\022\031\n\021strength_m"
    "odifier\030\002 \001(\005\022\030\n\020defence_modifier\030\003 \001(\005\022"
    "\027\n\017ranged_modifier\030\004 \001(\005\022\026\n\016magic_modifi"
    "er\030\005 \001(\005\022\035\n\025attack_speed_modifier\030\006 \001(\005\022"
    "\035\n\025attack_range_modifier\030\007 \001(\005B\r\n\013combat"
    "_type\"\226\004\n\021MeleeCombatOption\022Y\n\014attack_st"
    "yle\030\001 \001(\0162C.github.nkibler7.osrswikiscra"
    "per.MeleeCombatOption.MeleeAttackStyle\022W"
    "\n\013attack_type\030\002 \001(\0162B.github.nkibler7.os"
    "rswikiscraper.MeleeCombatOption.MeleeAtt"
    "ackType\"\277\001\n\020MeleeAttackStyle\022\"\n\036MELEE_AT"
    "TACK_STYLE_UNSPECIFIED\020\000\022\037\n\033MELEE_ATTACK"
    "_STYLE_ACCURATE\020\001\022!\n\035MELEE_ATTACK_STYLE_"
    "AGGRESSIVE\020\002\022 \n\034MELEE_ATTACK_STYLE_DEFEN"
    "SIVE\020\003\022!\n\035MELEE_ATTACK_STYLE_CONTROLLED\020"
    "\004\"\212\001\n\017MeleeAttackType\022!\n\035MELEE_ATTACK_TY"
    "PE_UNSPECIFIED\020\000\022\032\n\026MELEE_ATTACK_TYPE_ST"
    "AB\020\001\022\033\n\027MELEE_ATTACK_TYPE_SLASH\020\002\022\033\n\027MEL"
    "EE_ATTACK_TYPE_CRUSH\020\003\"\220\002\n\022RangedCombatO"
    "ption\022[\n\014attack_style\030\001 \001(\0162E.github.nki"
    "bler7.osrswikiscraper.RangedCombatOption"
    ".RangedAttackStyle\"\234\001\n\021RangedAttackStyle"
    "\022#\n\037RANGED_ATTACK_STYLE_UNSPECIFIED\020\000\022 \n"
    "\034RANGED_ATTACK_STYLE_ACCURATE\020\001\022\035\n\031RANGE"
    "D_ATTACK_STYLE_RAPID\020\002\022!\n\035RANGED_ATTACK_"
    "STYLE_LONGRANGE\020\003\"\330\002\n\021MagicCombatOption\022"
    "Y\n\014attack_style\030\001 \001(\0162C.github.nkibler7."
    "osrswikiscraper.MagicCombatOption.MagicA"
    "ttackStyle\"\347\001\n\020MagicAttackStyle\022\"\n\036MAGIC"
    "_ATTACK_STYLE_UNSPECIFIED\020\000\022\037\n\033MAGIC_ATT"
    "ACK_STYLE_AUTOCAST\020\001\022)\n%MAGIC_ATTACK_STY"
    "LE_DEFENSIVE_AUTOCAST\020\002\022\037\n\033MAGIC_ATTACK_"
    "STYLE_ACCURATE\020\003\022 \n\034MAGIC_ATTACK_STYLE_L"
    "ONGRANGE\020\004\022 \n\034MAGIC_ATTACK_STYLE_DEFENSI"
    "VE\020\005B\'\n#com.github.nkibler7.osrswikiscra"
    "perP\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_weapons_2eproto_deps[1] =
    {
        &::descriptor_table_stat_5fbonuses_2eproto,
};
static ::absl::once_flag descriptor_table_weapons_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_weapons_2eproto = {
    false,
    false,
    2213,
    descriptor_table_protodef_weapons_2eproto,
    "weapons.proto",
    &descriptor_table_weapons_2eproto_once,
    descriptor_table_weapons_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_weapons_2eproto::offsets,
    file_level_enum_descriptors_weapons_2eproto,
    file_level_service_descriptors_weapons_2eproto,
};
namespace github {
namespace nkibler7 {
namespace osrswikiscraper {
const ::google::protobuf::EnumDescriptor* MeleeCombatOption_MeleeAttackStyle_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_weapons_2eproto);
  return file_level_enum_descriptors_weapons_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MeleeCombatOption_MeleeAttackStyle_internal_data_[] = {
    327680u, 0u, };
bool MeleeCombatOption_MeleeAttackStyle_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MeleeCombatOption_MeleeAttackStyle MeleeCombatOption::MELEE_ATTACK_STYLE_UNSPECIFIED;
constexpr MeleeCombatOption_MeleeAttackStyle MeleeCombatOption::MELEE_ATTACK_STYLE_ACCURATE;
constexpr MeleeCombatOption_MeleeAttackStyle MeleeCombatOption::MELEE_ATTACK_STYLE_AGGRESSIVE;
constexpr MeleeCombatOption_MeleeAttackStyle MeleeCombatOption::MELEE_ATTACK_STYLE_DEFENSIVE;
constexpr MeleeCombatOption_MeleeAttackStyle MeleeCombatOption::MELEE_ATTACK_STYLE_CONTROLLED;
constexpr MeleeCombatOption_MeleeAttackStyle MeleeCombatOption::MeleeAttackStyle_MIN;
constexpr MeleeCombatOption_MeleeAttackStyle MeleeCombatOption::MeleeAttackStyle_MAX;
constexpr int MeleeCombatOption::MeleeAttackStyle_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* MeleeCombatOption_MeleeAttackType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_weapons_2eproto);
  return file_level_enum_descriptors_weapons_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MeleeCombatOption_MeleeAttackType_internal_data_[] = {
    262144u, 0u, };
bool MeleeCombatOption_MeleeAttackType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MeleeCombatOption_MeleeAttackType MeleeCombatOption::MELEE_ATTACK_TYPE_UNSPECIFIED;
constexpr MeleeCombatOption_MeleeAttackType MeleeCombatOption::MELEE_ATTACK_TYPE_STAB;
constexpr MeleeCombatOption_MeleeAttackType MeleeCombatOption::MELEE_ATTACK_TYPE_SLASH;
constexpr MeleeCombatOption_MeleeAttackType MeleeCombatOption::MELEE_ATTACK_TYPE_CRUSH;
constexpr MeleeCombatOption_MeleeAttackType MeleeCombatOption::MeleeAttackType_MIN;
constexpr MeleeCombatOption_MeleeAttackType MeleeCombatOption::MeleeAttackType_MAX;
constexpr int MeleeCombatOption::MeleeAttackType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RangedCombatOption_RangedAttackStyle_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_weapons_2eproto);
  return file_level_enum_descriptors_weapons_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t RangedCombatOption_RangedAttackStyle_internal_data_[] = {
    262144u, 0u, };
bool RangedCombatOption_RangedAttackStyle_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RangedCombatOption_RangedAttackStyle RangedCombatOption::RANGED_ATTACK_STYLE_UNSPECIFIED;
constexpr RangedCombatOption_RangedAttackStyle RangedCombatOption::RANGED_ATTACK_STYLE_ACCURATE;
constexpr RangedCombatOption_RangedAttackStyle RangedCombatOption::RANGED_ATTACK_STYLE_RAPID;
constexpr RangedCombatOption_RangedAttackStyle RangedCombatOption::RANGED_ATTACK_STYLE_LONGRANGE;
constexpr RangedCombatOption_RangedAttackStyle RangedCombatOption::RangedAttackStyle_MIN;
constexpr RangedCombatOption_RangedAttackStyle RangedCombatOption::RangedAttackStyle_MAX;
constexpr int RangedCombatOption::RangedAttackStyle_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* MagicCombatOption_MagicAttackStyle_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_weapons_2eproto);
  return file_level_enum_descriptors_weapons_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t MagicCombatOption_MagicAttackStyle_internal_data_[] = {
    393216u, 0u, };
bool MagicCombatOption_MagicAttackStyle_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MagicCombatOption_MagicAttackStyle MagicCombatOption::MAGIC_ATTACK_STYLE_UNSPECIFIED;
constexpr MagicCombatOption_MagicAttackStyle MagicCombatOption::MAGIC_ATTACK_STYLE_AUTOCAST;
constexpr MagicCombatOption_MagicAttackStyle MagicCombatOption::MAGIC_ATTACK_STYLE_DEFENSIVE_AUTOCAST;
constexpr MagicCombatOption_MagicAttackStyle MagicCombatOption::MAGIC_ATTACK_STYLE_ACCURATE;
constexpr MagicCombatOption_MagicAttackStyle MagicCombatOption::MAGIC_ATTACK_STYLE_LONGRANGE;
constexpr MagicCombatOption_MagicAttackStyle MagicCombatOption::MAGIC_ATTACK_STYLE_DEFENSIVE;
constexpr MagicCombatOption_MagicAttackStyle MagicCombatOption::MagicAttackStyle_MIN;
constexpr MagicCombatOption_MagicAttackStyle MagicCombatOption::MagicAttackStyle_MAX;
constexpr int MagicCombatOption::MagicAttackStyle_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

Weapons_WeaponsEntry_DoNotUse::Weapons_WeaponsEntry_DoNotUse() {}
Weapons_WeaponsEntry_DoNotUse::Weapons_WeaponsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
Weapons_WeaponsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Weapons_WeaponsEntry_DoNotUse, _cached_size_),
              false,
          },
          &Weapons_WeaponsEntry_DoNotUse::MergeImpl,
          &Weapons_WeaponsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_weapons_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class Weapons::_Internal {
 public:
};

Weapons::Weapons(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.Weapons)
}
inline PROTOBUF_NDEBUG_INLINE Weapons::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::github::nkibler7::osrswikiscraper::Weapons& from_msg)
      : weapons_{visibility, arena, from.weapons_},
        _cached_size_{0} {}

Weapons::Weapons(
    ::google::protobuf::Arena* arena,
    const Weapons& from)
    : ::google::protobuf::Message(arena) {
  Weapons* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:github.nkibler7.osrswikiscraper.Weapons)
}
inline PROTOBUF_NDEBUG_INLINE Weapons::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : weapons_{visibility, arena},
        _cached_size_{0} {}

inline void Weapons::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Weapons::~Weapons() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.Weapons)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Weapons::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Weapons::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Weapons, _impl_._cached_size_),
              false,
          },
          &Weapons::MergeImpl,
          &Weapons::kDescriptorMethods,
          &descriptor_table_weapons_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 2, 0, 2> Weapons::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Weapons_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::Weapons>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<int32, .github.nkibler7.osrswikiscraper.Weapon> weapons = 1;
    {PROTOBUF_FIELD_OFFSET(Weapons, _impl_.weapons_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Weapons()._impl_.weapons_)>(
        0, 0, 0, 5,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::github::nkibler7::osrswikiscraper::Weapon>},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Weapons::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.Weapons)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.weapons_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Weapons::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.Weapons)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, .github.nkibler7.osrswikiscraper.Weapon> weapons = 1;
  if (!_internal_weapons().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::github::nkibler7::osrswikiscraper::Weapon>;
    using WireHelper = _pbi::MapEntryFuncs<::int32_t, ::github::nkibler7::osrswikiscraper::Weapon,
                                   _pbi::WireFormatLite::TYPE_INT32,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_weapons();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.Weapons)
  return target;
}

::size_t Weapons::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.Weapons)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // map<int32, .github.nkibler7.osrswikiscraper.Weapon> weapons = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_weapons_size());
  for (const auto& entry : _internal_weapons()) {
    total_size += _pbi::MapEntryFuncs<::int32_t, ::github::nkibler7::osrswikiscraper::Weapon,
                                   _pbi::WireFormatLite::TYPE_INT32,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Weapons::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Weapons*>(&to_msg);
  auto& from = static_cast<const Weapons&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.Weapons)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.weapons_.MergeFrom(from._impl_.weapons_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Weapons::CopyFrom(const Weapons& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.Weapons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Weapons::InternalSwap(Weapons* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.weapons_.InternalSwap(&other->_impl_.weapons_);
}

::google::protobuf::Metadata Weapons::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Weapon::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Weapon>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Weapon, _impl_._has_bits_);
};

void Weapon::clear_stat_bonuses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stat_bonuses_ != nullptr) _impl_.stat_bonuses_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Weapon::Weapon(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.Weapon)
}
inline PROTOBUF_NDEBUG_INLINE Weapon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::github::nkibler7::osrswikiscraper::Weapon& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        combat_options_{visibility, arena, from.combat_options_},
        name_(arena, from.name_) {}

Weapon::Weapon(
    ::google::protobuf::Arena* arena,
    const Weapon& from)
    : ::google::protobuf::Message(arena) {
  Weapon* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.stat_bonuses_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::StatBonuses>(
                              arena, *from._impl_.stat_bonuses_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, base_attack_range_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::base_attack_range_));

  // @@protoc_insertion_point(copy_constructor:github.nkibler7.osrswikiscraper.Weapon)
}
inline PROTOBUF_NDEBUG_INLINE Weapon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        combat_options_{visibility, arena},
        name_(arena) {}

inline void Weapon::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stat_bonuses_),
           0,
           offsetof(Impl_, base_attack_range_) -
               offsetof(Impl_, stat_bonuses_) +
               sizeof(Impl_::base_attack_range_));
}
Weapon::~Weapon() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.Weapon)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Weapon::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.stat_bonuses_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Weapon::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Weapon, _impl_._cached_size_),
              false,
          },
          &Weapon::MergeImpl,
          &Weapon::kDescriptorMethods,
          &descriptor_table_weapons_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 51, 2> Weapon::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Weapon, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Weapon_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::Weapon>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Weapon, _impl_.name_)}},
    // int32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Weapon, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Weapon, _impl_.id_)}},
    // int32 base_attack_speed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Weapon, _impl_.base_attack_speed_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Weapon, _impl_.base_attack_speed_)}},
    // int32 base_attack_range = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Weapon, _impl_.base_attack_range_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Weapon, _impl_.base_attack_range_)}},
    // .github.nkibler7.osrswikiscraper.StatBonuses stat_bonuses = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Weapon, _impl_.stat_bonuses_)}},
    // repeated .github.nkibler7.osrswikiscraper.CombatOption combat_options = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(Weapon, _impl_.combat_options_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Weapon, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 id = 2;
    {PROTOBUF_FIELD_OFFSET(Weapon, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 base_attack_speed = 3;
    {PROTOBUF_FIELD_OFFSET(Weapon, _impl_.base_attack_speed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 base_attack_range = 4;
    {PROTOBUF_FIELD_OFFSET(Weapon, _impl_.base_attack_range_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .github.nkibler7.osrswikiscraper.StatBonuses stat_bonuses = 5;
    {PROTOBUF_FIELD_OFFSET(Weapon, _impl_.stat_bonuses_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .github.nkibler7.osrswikiscraper.CombatOption combat_options = 6;
    {PROTOBUF_FIELD_OFFSET(Weapon, _impl_.combat_options_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::StatBonuses>()},
    {::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::CombatOption>()},
  }}, {{
    "\46\4\0\0\0\0\0\0"
    "github.nkibler7.osrswikiscraper.Weapon"
    "name"
  }},
};

PROTOBUF_NOINLINE void Weapon::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.Weapon)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.combat_options_.Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.stat_bonuses_ != nullptr);
    _impl_.stat_bonuses_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.base_attack_range_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.base_attack_range_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Weapon::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.Weapon)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "github.nkibler7.osrswikiscraper.Weapon.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_id(), target);
  }

  // int32 base_attack_speed = 3;
  if (this->_internal_base_attack_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_base_attack_speed(), target);
  }

  // int32 base_attack_range = 4;
  if (this->_internal_base_attack_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_base_attack_range(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .github.nkibler7.osrswikiscraper.StatBonuses stat_bonuses = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.stat_bonuses_, _impl_.stat_bonuses_->GetCachedSize(), target, stream);
  }

  // repeated .github.nkibler7.osrswikiscraper.CombatOption combat_options = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_combat_options_size());
       i < n; i++) {
    const auto& repfield = this->_internal_combat_options().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.Weapon)
  return target;
}

::size_t Weapon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.Weapon)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .github.nkibler7.osrswikiscraper.CombatOption combat_options = 6;
  total_size += 1UL * this->_internal_combat_options_size();
  for (const auto& msg : this->_internal_combat_options()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .github.nkibler7.osrswikiscraper.StatBonuses stat_bonuses = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.stat_bonuses_);
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 base_attack_speed = 3;
  if (this->_internal_base_attack_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_base_attack_speed());
  }

  // int32 base_attack_range = 4;
  if (this->_internal_base_attack_range() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_base_attack_range());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Weapon::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Weapon*>(&to_msg);
  auto& from = static_cast<const Weapon&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.Weapon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_combat_options()->MergeFrom(
      from._internal_combat_options());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.stat_bonuses_ != nullptr);
    if (_this->_impl_.stat_bonuses_ == nullptr) {
      _this->_impl_.stat_bonuses_ =
          ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::StatBonuses>(arena, *from._impl_.stat_bonuses_);
    } else {
      _this->_impl_.stat_bonuses_->MergeFrom(*from._impl_.stat_bonuses_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_base_attack_speed() != 0) {
    _this->_impl_.base_attack_speed_ = from._impl_.base_attack_speed_;
  }
  if (from._internal_base_attack_range() != 0) {
    _this->_impl_.base_attack_range_ = from._impl_.base_attack_range_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Weapon::CopyFrom(const Weapon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.Weapon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Weapon::InternalSwap(Weapon* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.combat_options_.InternalSwap(&other->_impl_.combat_options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Weapon, _impl_.base_attack_range_)
      + sizeof(Weapon::_impl_.base_attack_range_)
      - PROTOBUF_FIELD_OFFSET(Weapon, _impl_.stat_bonuses_)>(
          reinterpret_cast<char*>(&_impl_.stat_bonuses_),
          reinterpret_cast<char*>(&other->_impl_.stat_bonuses_));
}

::google::protobuf::Metadata Weapon::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CombatOption_Modifiers::_Internal {
 public:
};

CombatOption_Modifiers::CombatOption_Modifiers(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
}
CombatOption_Modifiers::CombatOption_Modifiers(
    ::google::protobuf::Arena* arena, const CombatOption_Modifiers& from)
    : CombatOption_Modifiers(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CombatOption_Modifiers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CombatOption_Modifiers::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attack_modifier_),
           0,
           offsetof(Impl_, attack_range_modifier_) -
               offsetof(Impl_, attack_modifier_) +
               sizeof(Impl_::attack_range_modifier_));
}
CombatOption_Modifiers::~CombatOption_Modifiers() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CombatOption_Modifiers::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CombatOption_Modifiers::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_._cached_size_),
              false,
          },
          &CombatOption_Modifiers::MergeImpl,
          &CombatOption_Modifiers::kDescriptorMethods,
          &descriptor_table_weapons_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> CombatOption_Modifiers::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CombatOption_Modifiers_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::CombatOption_Modifiers>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 attack_modifier = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatOption_Modifiers, _impl_.attack_modifier_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.attack_modifier_)}},
    // int32 strength_modifier = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatOption_Modifiers, _impl_.strength_modifier_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.strength_modifier_)}},
    // int32 defence_modifier = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatOption_Modifiers, _impl_.defence_modifier_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.defence_modifier_)}},
    // int32 ranged_modifier = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatOption_Modifiers, _impl_.ranged_modifier_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.ranged_modifier_)}},
    // int32 magic_modifier = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatOption_Modifiers, _impl_.magic_modifier_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.magic_modifier_)}},
    // int32 attack_speed_modifier = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatOption_Modifiers, _impl_.attack_speed_modifier_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.attack_speed_modifier_)}},
    // int32 attack_range_modifier = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatOption_Modifiers, _impl_.attack_range_modifier_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.attack_range_modifier_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 attack_modifier = 1;
    {PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.attack_modifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 strength_modifier = 2;
    {PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.strength_modifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 defence_modifier = 3;
    {PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.defence_modifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 ranged_modifier = 4;
    {PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.ranged_modifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 magic_modifier = 5;
    {PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.magic_modifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 attack_speed_modifier = 6;
    {PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.attack_speed_modifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 attack_range_modifier = 7;
    {PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.attack_range_modifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CombatOption_Modifiers::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.attack_modifier_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.attack_range_modifier_) -
      reinterpret_cast<char*>(&_impl_.attack_modifier_)) + sizeof(_impl_.attack_range_modifier_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CombatOption_Modifiers::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 attack_modifier = 1;
  if (this->_internal_attack_modifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_attack_modifier(), target);
  }

  // int32 strength_modifier = 2;
  if (this->_internal_strength_modifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_strength_modifier(), target);
  }

  // int32 defence_modifier = 3;
  if (this->_internal_defence_modifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_defence_modifier(), target);
  }

  // int32 ranged_modifier = 4;
  if (this->_internal_ranged_modifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_ranged_modifier(), target);
  }

  // int32 magic_modifier = 5;
  if (this->_internal_magic_modifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_magic_modifier(), target);
  }

  // int32 attack_speed_modifier = 6;
  if (this->_internal_attack_speed_modifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_attack_speed_modifier(), target);
  }

  // int32 attack_range_modifier = 7;
  if (this->_internal_attack_range_modifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_attack_range_modifier(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
  return target;
}

::size_t CombatOption_Modifiers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 attack_modifier = 1;
  if (this->_internal_attack_modifier() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_attack_modifier());
  }

  // int32 strength_modifier = 2;
  if (this->_internal_strength_modifier() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_strength_modifier());
  }

  // int32 defence_modifier = 3;
  if (this->_internal_defence_modifier() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_defence_modifier());
  }

  // int32 ranged_modifier = 4;
  if (this->_internal_ranged_modifier() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_ranged_modifier());
  }

  // int32 magic_modifier = 5;
  if (this->_internal_magic_modifier() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_magic_modifier());
  }

  // int32 attack_speed_modifier = 6;
  if (this->_internal_attack_speed_modifier() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_attack_speed_modifier());
  }

  // int32 attack_range_modifier = 7;
  if (this->_internal_attack_range_modifier() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_attack_range_modifier());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CombatOption_Modifiers::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CombatOption_Modifiers*>(&to_msg);
  auto& from = static_cast<const CombatOption_Modifiers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_attack_modifier() != 0) {
    _this->_impl_.attack_modifier_ = from._impl_.attack_modifier_;
  }
  if (from._internal_strength_modifier() != 0) {
    _this->_impl_.strength_modifier_ = from._impl_.strength_modifier_;
  }
  if (from._internal_defence_modifier() != 0) {
    _this->_impl_.defence_modifier_ = from._impl_.defence_modifier_;
  }
  if (from._internal_ranged_modifier() != 0) {
    _this->_impl_.ranged_modifier_ = from._impl_.ranged_modifier_;
  }
  if (from._internal_magic_modifier() != 0) {
    _this->_impl_.magic_modifier_ = from._impl_.magic_modifier_;
  }
  if (from._internal_attack_speed_modifier() != 0) {
    _this->_impl_.attack_speed_modifier_ = from._impl_.attack_speed_modifier_;
  }
  if (from._internal_attack_range_modifier() != 0) {
    _this->_impl_.attack_range_modifier_ = from._impl_.attack_range_modifier_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CombatOption_Modifiers::CopyFrom(const CombatOption_Modifiers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CombatOption_Modifiers::InternalSwap(CombatOption_Modifiers* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.attack_range_modifier_)
      + sizeof(CombatOption_Modifiers::_impl_.attack_range_modifier_)
      - PROTOBUF_FIELD_OFFSET(CombatOption_Modifiers, _impl_.attack_modifier_)>(
          reinterpret_cast<char*>(&_impl_.attack_modifier_),
          reinterpret_cast<char*>(&other->_impl_.attack_modifier_));
}

::google::protobuf::Metadata CombatOption_Modifiers::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CombatOption::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CombatOption>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CombatOption, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::CombatOption, _impl_._oneof_case_);
};

void CombatOption::set_allocated_melee(::github::nkibler7::osrswikiscraper::MeleeCombatOption* melee) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_combat_type();
  if (melee) {
    ::google::protobuf::Arena* submessage_arena = melee->GetArena();
    if (message_arena != submessage_arena) {
      melee = ::google::protobuf::internal::GetOwnedMessage(message_arena, melee, submessage_arena);
    }
    set_has_melee();
    _impl_.combat_type_.melee_ = melee;
  }
  // @@protoc_insertion_point(field_set_allocated:github.nkibler7.osrswikiscraper.CombatOption.melee)
}
void CombatOption::set_allocated_ranged(::github::nkibler7::osrswikiscraper::RangedCombatOption* ranged) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_combat_type();
  if (ranged) {
    ::google::protobuf::Arena* submessage_arena = ranged->GetArena();
    if (message_arena != submessage_arena) {
      ranged = ::google::protobuf::internal::GetOwnedMessage(message_arena, ranged, submessage_arena);
    }
    set_has_ranged();
    _impl_.combat_type_.ranged_ = ranged;
  }
  // @@protoc_insertion_point(field_set_allocated:github.nkibler7.osrswikiscraper.CombatOption.ranged)
}
void CombatOption::set_allocated_magic(::github::nkibler7::osrswikiscraper::MagicCombatOption* magic) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_combat_type();
  if (magic) {
    ::google::protobuf::Arena* submessage_arena = magic->GetArena();
    if (message_arena != submessage_arena) {
      magic = ::google::protobuf::internal::GetOwnedMessage(message_arena, magic, submessage_arena);
    }
    set_has_magic();
    _impl_.combat_type_.magic_ = magic;
  }
  // @@protoc_insertion_point(field_set_allocated:github.nkibler7.osrswikiscraper.CombatOption.magic)
}
CombatOption::CombatOption(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.CombatOption)
}
inline PROTOBUF_NDEBUG_INLINE CombatOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::github::nkibler7::osrswikiscraper::CombatOption& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        combat_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

CombatOption::CombatOption(
    ::google::protobuf::Arena* arena,
    const CombatOption& from)
    : ::google::protobuf::Message(arena) {
  CombatOption* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.modifiers_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::CombatOption_Modifiers>(
                              arena, *from._impl_.modifiers_)
                        : nullptr;
  switch (combat_type_case()) {
    case COMBAT_TYPE_NOT_SET:
      break;
      case kMelee:
        _impl_.combat_type_.melee_ = ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::MeleeCombatOption>(arena, *from._impl_.combat_type_.melee_);
        break;
      case kRanged:
        _impl_.combat_type_.ranged_ = ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::RangedCombatOption>(arena, *from._impl_.combat_type_.ranged_);
        break;
      case kMagic:
        _impl_.combat_type_.magic_ = ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::MagicCombatOption>(arena, *from._impl_.combat_type_.magic_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:github.nkibler7.osrswikiscraper.CombatOption)
}
inline PROTOBUF_NDEBUG_INLINE CombatOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        combat_type_{},
        _oneof_case_{} {}

inline void CombatOption::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.modifiers_ = {};
}
CombatOption::~CombatOption() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.CombatOption)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CombatOption::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.modifiers_;
  if (has_combat_type()) {
    clear_combat_type();
  }
  _impl_.~Impl_();
}

void CombatOption::clear_combat_type() {
// @@protoc_insertion_point(one_of_clear_start:github.nkibler7.osrswikiscraper.CombatOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (combat_type_case()) {
    case kMelee: {
      if (GetArena() == nullptr) {
        delete _impl_.combat_type_.melee_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.combat_type_.melee_);
      }
      break;
    }
    case kRanged: {
      if (GetArena() == nullptr) {
        delete _impl_.combat_type_.ranged_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.combat_type_.ranged_);
      }
      break;
    }
    case kMagic: {
      if (GetArena() == nullptr) {
        delete _impl_.combat_type_.magic_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.combat_type_.magic_);
      }
      break;
    }
    case COMBAT_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMBAT_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
CombatOption::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CombatOption, _impl_._cached_size_),
              false,
          },
          &CombatOption::MergeImpl,
          &CombatOption::kDescriptorMethods,
          &descriptor_table_weapons_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 5, 4, 57, 2> CombatOption::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CombatOption, _impl_._has_bits_),
    0, // no _extensions_
    5, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CombatOption_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::CombatOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CombatOption, _impl_.modifiers_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CombatOption, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(CombatOption, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;
    {PROTOBUF_FIELD_OFFSET(CombatOption, _impl_.modifiers_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;
    {PROTOBUF_FIELD_OFFSET(CombatOption, _impl_.combat_type_.melee_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;
    {PROTOBUF_FIELD_OFFSET(CombatOption, _impl_.combat_type_.ranged_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;
    {PROTOBUF_FIELD_OFFSET(CombatOption, _impl_.combat_type_.magic_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::CombatOption_Modifiers>()},
    {::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::MeleeCombatOption>()},
    {::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::RangedCombatOption>()},
    {::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::MagicCombatOption>()},
  }}, {{
    "\54\4\0\0\0\0\0\0"
    "github.nkibler7.osrswikiscraper.CombatOption"
    "name"
  }},
};

PROTOBUF_NOINLINE void CombatOption::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.CombatOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.modifiers_ != nullptr);
    _impl_.modifiers_->Clear();
  }
  clear_combat_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CombatOption::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.CombatOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "github.nkibler7.osrswikiscraper.CombatOption.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.modifiers_, _impl_.modifiers_->GetCachedSize(), target, stream);
  }

  switch (combat_type_case()) {
    case kMelee: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.combat_type_.melee_, _impl_.combat_type_.melee_->GetCachedSize(), target, stream);
      break;
    }
    case kRanged: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.combat_type_.ranged_, _impl_.combat_type_.ranged_->GetCachedSize(), target, stream);
      break;
    }
    case kMagic: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.combat_type_.magic_, _impl_.combat_type_.magic_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.CombatOption)
  return target;
}

::size_t CombatOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.CombatOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.modifiers_);
  }

  switch (combat_type_case()) {
    // .github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;
    case kMelee: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.combat_type_.melee_);
      break;
    }
    // .github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;
    case kRanged: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.combat_type_.ranged_);
      break;
    }
    // .github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;
    case kMagic: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.combat_type_.magic_);
      break;
    }
    case COMBAT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CombatOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CombatOption*>(&to_msg);
  auto& from = static_cast<const CombatOption&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.CombatOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.modifiers_ != nullptr);
    if (_this->_impl_.modifiers_ == nullptr) {
      _this->_impl_.modifiers_ =
          ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::CombatOption_Modifiers>(arena, *from._impl_.modifiers_);
    } else {
      _this->_impl_.modifiers_->MergeFrom(*from._impl_.modifiers_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_combat_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMelee: {
        if (oneof_needs_init) {
          _this->_impl_.combat_type_.melee_ =
              ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::MeleeCombatOption>(arena, *from._impl_.combat_type_.melee_);
        } else {
          _this->_impl_.combat_type_.melee_->MergeFrom(from._internal_melee());
        }
        break;
      }
      case kRanged: {
        if (oneof_needs_init) {
          _this->_impl_.combat_type_.ranged_ =
              ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::RangedCombatOption>(arena, *from._impl_.combat_type_.ranged_);
        } else {
          _this->_impl_.combat_type_.ranged_->MergeFrom(from._internal_ranged());
        }
        break;
      }
      case kMagic: {
        if (oneof_needs_init) {
          _this->_impl_.combat_type_.magic_ =
              ::google::protobuf::Message::CopyConstruct<::github::nkibler7::osrswikiscraper::MagicCombatOption>(arena, *from._impl_.combat_type_.magic_);
        } else {
          _this->_impl_.combat_type_.magic_->MergeFrom(from._internal_magic());
        }
        break;
      }
      case COMBAT_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CombatOption::CopyFrom(const CombatOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.CombatOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CombatOption::InternalSwap(CombatOption* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.modifiers_, other->_impl_.modifiers_);
  swap(_impl_.combat_type_, other->_impl_.combat_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CombatOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeleeCombatOption::_Internal {
 public:
};

MeleeCombatOption::MeleeCombatOption(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.MeleeCombatOption)
}
MeleeCombatOption::MeleeCombatOption(
    ::google::protobuf::Arena* arena, const MeleeCombatOption& from)
    : MeleeCombatOption(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MeleeCombatOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MeleeCombatOption::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attack_style_),
           0,
           offsetof(Impl_, attack_type_) -
               offsetof(Impl_, attack_style_) +
               sizeof(Impl_::attack_type_));
}
MeleeCombatOption::~MeleeCombatOption() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.MeleeCombatOption)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MeleeCombatOption::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MeleeCombatOption::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MeleeCombatOption, _impl_._cached_size_),
              false,
          },
          &MeleeCombatOption::MergeImpl,
          &MeleeCombatOption::kDescriptorMethods,
          &descriptor_table_weapons_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MeleeCombatOption::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MeleeCombatOption_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::MeleeCombatOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .github.nkibler7.osrswikiscraper.MeleeCombatOption.MeleeAttackType attack_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeleeCombatOption, _impl_.attack_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MeleeCombatOption, _impl_.attack_type_)}},
    // .github.nkibler7.osrswikiscraper.MeleeCombatOption.MeleeAttackStyle attack_style = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeleeCombatOption, _impl_.attack_style_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MeleeCombatOption, _impl_.attack_style_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .github.nkibler7.osrswikiscraper.MeleeCombatOption.MeleeAttackStyle attack_style = 1;
    {PROTOBUF_FIELD_OFFSET(MeleeCombatOption, _impl_.attack_style_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .github.nkibler7.osrswikiscraper.MeleeCombatOption.MeleeAttackType attack_type = 2;
    {PROTOBUF_FIELD_OFFSET(MeleeCombatOption, _impl_.attack_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MeleeCombatOption::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.MeleeCombatOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.attack_style_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.attack_type_) -
      reinterpret_cast<char*>(&_impl_.attack_style_)) + sizeof(_impl_.attack_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MeleeCombatOption::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.MeleeCombatOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .github.nkibler7.osrswikiscraper.MeleeCombatOption.MeleeAttackStyle attack_style = 1;
  if (this->_internal_attack_style() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_attack_style(), target);
  }

  // .github.nkibler7.osrswikiscraper.MeleeCombatOption.MeleeAttackType attack_type = 2;
  if (this->_internal_attack_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_attack_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.MeleeCombatOption)
  return target;
}

::size_t MeleeCombatOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.MeleeCombatOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .github.nkibler7.osrswikiscraper.MeleeCombatOption.MeleeAttackStyle attack_style = 1;
  if (this->_internal_attack_style() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_attack_style());
  }

  // .github.nkibler7.osrswikiscraper.MeleeCombatOption.MeleeAttackType attack_type = 2;
  if (this->_internal_attack_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_attack_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MeleeCombatOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeleeCombatOption*>(&to_msg);
  auto& from = static_cast<const MeleeCombatOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.MeleeCombatOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_attack_style() != 0) {
    _this->_impl_.attack_style_ = from._impl_.attack_style_;
  }
  if (from._internal_attack_type() != 0) {
    _this->_impl_.attack_type_ = from._impl_.attack_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeleeCombatOption::CopyFrom(const MeleeCombatOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.MeleeCombatOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeleeCombatOption::InternalSwap(MeleeCombatOption* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MeleeCombatOption, _impl_.attack_type_)
      + sizeof(MeleeCombatOption::_impl_.attack_type_)
      - PROTOBUF_FIELD_OFFSET(MeleeCombatOption, _impl_.attack_style_)>(
          reinterpret_cast<char*>(&_impl_.attack_style_),
          reinterpret_cast<char*>(&other->_impl_.attack_style_));
}

::google::protobuf::Metadata MeleeCombatOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RangedCombatOption::_Internal {
 public:
};

RangedCombatOption::RangedCombatOption(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.RangedCombatOption)
}
RangedCombatOption::RangedCombatOption(
    ::google::protobuf::Arena* arena, const RangedCombatOption& from)
    : RangedCombatOption(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RangedCombatOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RangedCombatOption::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attack_style_ = {};
}
RangedCombatOption::~RangedCombatOption() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.RangedCombatOption)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RangedCombatOption::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RangedCombatOption::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RangedCombatOption, _impl_._cached_size_),
              false,
          },
          &RangedCombatOption::MergeImpl,
          &RangedCombatOption::kDescriptorMethods,
          &descriptor_table_weapons_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RangedCombatOption::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RangedCombatOption_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::RangedCombatOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .github.nkibler7.osrswikiscraper.RangedCombatOption.RangedAttackStyle attack_style = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RangedCombatOption, _impl_.attack_style_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RangedCombatOption, _impl_.attack_style_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .github.nkibler7.osrswikiscraper.RangedCombatOption.RangedAttackStyle attack_style = 1;
    {PROTOBUF_FIELD_OFFSET(RangedCombatOption, _impl_.attack_style_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RangedCombatOption::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.RangedCombatOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attack_style_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RangedCombatOption::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.RangedCombatOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .github.nkibler7.osrswikiscraper.RangedCombatOption.RangedAttackStyle attack_style = 1;
  if (this->_internal_attack_style() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_attack_style(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.RangedCombatOption)
  return target;
}

::size_t RangedCombatOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.RangedCombatOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .github.nkibler7.osrswikiscraper.RangedCombatOption.RangedAttackStyle attack_style = 1;
  if (this->_internal_attack_style() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_attack_style());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RangedCombatOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RangedCombatOption*>(&to_msg);
  auto& from = static_cast<const RangedCombatOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.RangedCombatOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_attack_style() != 0) {
    _this->_impl_.attack_style_ = from._impl_.attack_style_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangedCombatOption::CopyFrom(const RangedCombatOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.RangedCombatOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RangedCombatOption::InternalSwap(RangedCombatOption* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.attack_style_, other->_impl_.attack_style_);
}

::google::protobuf::Metadata RangedCombatOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MagicCombatOption::_Internal {
 public:
};

MagicCombatOption::MagicCombatOption(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.MagicCombatOption)
}
MagicCombatOption::MagicCombatOption(
    ::google::protobuf::Arena* arena, const MagicCombatOption& from)
    : MagicCombatOption(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MagicCombatOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MagicCombatOption::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attack_style_ = {};
}
MagicCombatOption::~MagicCombatOption() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.MagicCombatOption)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MagicCombatOption::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MagicCombatOption::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MagicCombatOption, _impl_._cached_size_),
              false,
          },
          &MagicCombatOption::MergeImpl,
          &MagicCombatOption::kDescriptorMethods,
          &descriptor_table_weapons_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MagicCombatOption::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MagicCombatOption_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::MagicCombatOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .github.nkibler7.osrswikiscraper.MagicCombatOption.MagicAttackStyle attack_style = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MagicCombatOption, _impl_.attack_style_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MagicCombatOption, _impl_.attack_style_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .github.nkibler7.osrswikiscraper.MagicCombatOption.MagicAttackStyle attack_style = 1;
    {PROTOBUF_FIELD_OFFSET(MagicCombatOption, _impl_.attack_style_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MagicCombatOption::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.MagicCombatOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attack_style_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MagicCombatOption::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.MagicCombatOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .github.nkibler7.osrswikiscraper.MagicCombatOption.MagicAttackStyle attack_style = 1;
  if (this->_internal_attack_style() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_attack_style(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.MagicCombatOption)
  return target;
}

::size_t MagicCombatOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.MagicCombatOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .github.nkibler7.osrswikiscraper.MagicCombatOption.MagicAttackStyle attack_style = 1;
  if (this->_internal_attack_style() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_attack_style());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MagicCombatOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MagicCombatOption*>(&to_msg);
  auto& from = static_cast<const MagicCombatOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.MagicCombatOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_attack_style() != 0) {
    _this->_impl_.attack_style_ = from._impl_.attack_style_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MagicCombatOption::CopyFrom(const MagicCombatOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.MagicCombatOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MagicCombatOption::InternalSwap(MagicCombatOption* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.attack_style_, other->_impl_.attack_style_);
}

::google::protobuf::Metadata MagicCombatOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace osrswikiscraper
}  // namespace nkibler7
}  // namespace github
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_weapons_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
