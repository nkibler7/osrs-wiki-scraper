// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: npc_infos.proto
// Protobuf C++ Version: 5.27.3

#include "npc_infos.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace github {
namespace nkibler7 {
namespace osrswikiscraper {

inline constexpr NpcInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ids_{},
        _ids_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attributes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hitpoints_{0},
        att_{0},
        str_{0},
        def_{0},
        mage_{0},
        range_{0},
        attbns_{0},
        strbns_{0},
        amagic_{0},
        mbns_{0},
        arange_{0},
        rngbns_{0},
        dstab_{0},
        dslash_{0},
        dcrush_{0},
        dmagic_{0},
        drange_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NpcInfo::NpcInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NpcInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NpcInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NpcInfoDefaultTypeInternal() {}
  union {
    NpcInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NpcInfoDefaultTypeInternal _NpcInfo_default_instance_;

inline constexpr NpcInfos::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : npcs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NpcInfos::NpcInfos(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NpcInfosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NpcInfosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NpcInfosDefaultTypeInternal() {}
  union {
    NpcInfos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NpcInfosDefaultTypeInternal _NpcInfos_default_instance_;
}  // namespace osrswikiscraper
}  // namespace nkibler7
}  // namespace github
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_npc_5finfos_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_npc_5finfos_2eproto = nullptr;
const ::uint32_t
    TableStruct_npc_5finfos_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfos, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfos, _impl_.npcs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.ids_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.attributes_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.hitpoints_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.att_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.str_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.def_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.mage_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.range_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.attbns_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.strbns_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.amagic_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.mbns_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.arange_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.rngbns_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.dstab_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.dslash_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.dcrush_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.dmagic_),
        PROTOBUF_FIELD_OFFSET(::github::nkibler7::osrswikiscraper::NpcInfo, _impl_.drange_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::github::nkibler7::osrswikiscraper::NpcInfos)},
        {9, -1, -1, sizeof(::github::nkibler7::osrswikiscraper::NpcInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::github::nkibler7::osrswikiscraper::_NpcInfos_default_instance_._instance,
    &::github::nkibler7::osrswikiscraper::_NpcInfo_default_instance_._instance,
};
const char descriptor_table_protodef_npc_5finfos_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017npc_infos.proto\022\037github.nkibler7.osrsw"
    "ikiscraper\"B\n\010NpcInfos\0226\n\004npcs\030\001 \003(\0132(.g"
    "ithub.nkibler7.osrswikiscraper.NpcInfo\"\315"
    "\002\n\007NpcInfo\022\013\n\003ids\030\001 \003(\005\022\014\n\004name\030\002 \001(\t\022\017\n"
    "\007version\030\003 \001(\t\022\022\n\nattributes\030\025 \001(\t\022\021\n\thi"
    "tpoints\030\004 \001(\005\022\013\n\003att\030\005 \001(\005\022\013\n\003str\030\006 \001(\005\022"
    "\013\n\003def\030\007 \001(\005\022\014\n\004mage\030\010 \001(\005\022\r\n\005range\030\t \001("
    "\005\022\016\n\006attbns\030\n \001(\005\022\016\n\006strbns\030\013 \001(\005\022\016\n\006ama"
    "gic\030\014 \001(\005\022\014\n\004mbns\030\r \001(\005\022\016\n\006arange\030\016 \001(\005\022"
    "\016\n\006rngbns\030\017 \001(\005\022\r\n\005dstab\030\020 \001(\005\022\016\n\006dslash"
    "\030\021 \001(\005\022\016\n\006dcrush\030\022 \001(\005\022\016\n\006dmagic\030\023 \001(\005\022\016"
    "\n\006drange\030\024 \001(\005B\'\n#com.github.nkibler7.os"
    "rswikiscraperP\001b\006proto3"
};
static ::absl::once_flag descriptor_table_npc_5finfos_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_npc_5finfos_2eproto = {
    false,
    false,
    503,
    descriptor_table_protodef_npc_5finfos_2eproto,
    "npc_infos.proto",
    &descriptor_table_npc_5finfos_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_npc_5finfos_2eproto::offsets,
    file_level_enum_descriptors_npc_5finfos_2eproto,
    file_level_service_descriptors_npc_5finfos_2eproto,
};
namespace github {
namespace nkibler7 {
namespace osrswikiscraper {
// ===================================================================

class NpcInfos::_Internal {
 public:
};

NpcInfos::NpcInfos(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.NpcInfos)
}
inline PROTOBUF_NDEBUG_INLINE NpcInfos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::github::nkibler7::osrswikiscraper::NpcInfos& from_msg)
      : npcs_{visibility, arena, from.npcs_},
        _cached_size_{0} {}

NpcInfos::NpcInfos(
    ::google::protobuf::Arena* arena,
    const NpcInfos& from)
    : ::google::protobuf::Message(arena) {
  NpcInfos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:github.nkibler7.osrswikiscraper.NpcInfos)
}
inline PROTOBUF_NDEBUG_INLINE NpcInfos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : npcs_{visibility, arena},
        _cached_size_{0} {}

inline void NpcInfos::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NpcInfos::~NpcInfos() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.NpcInfos)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NpcInfos::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NpcInfos::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NpcInfos, _impl_._cached_size_),
              false,
          },
          &NpcInfos::MergeImpl,
          &NpcInfos::kDescriptorMethods,
          &descriptor_table_npc_5finfos_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NpcInfos::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NpcInfos_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::NpcInfos>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .github.nkibler7.osrswikiscraper.NpcInfo npcs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfos, _impl_.npcs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .github.nkibler7.osrswikiscraper.NpcInfo npcs = 1;
    {PROTOBUF_FIELD_OFFSET(NpcInfos, _impl_.npcs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::NpcInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NpcInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.NpcInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.npcs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NpcInfos::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.NpcInfos)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .github.nkibler7.osrswikiscraper.NpcInfo npcs = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_npcs_size());
       i < n; i++) {
    const auto& repfield = this->_internal_npcs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.NpcInfos)
  return target;
}

::size_t NpcInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.NpcInfos)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .github.nkibler7.osrswikiscraper.NpcInfo npcs = 1;
  total_size += 1UL * this->_internal_npcs_size();
  for (const auto& msg : this->_internal_npcs()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NpcInfos::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NpcInfos*>(&to_msg);
  auto& from = static_cast<const NpcInfos&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.NpcInfos)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_npcs()->MergeFrom(
      from._internal_npcs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NpcInfos::CopyFrom(const NpcInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.NpcInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NpcInfos::InternalSwap(NpcInfos* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.npcs_.InternalSwap(&other->_impl_.npcs_);
}

::google::protobuf::Metadata NpcInfos::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NpcInfo::_Internal {
 public:
};

NpcInfo::NpcInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.nkibler7.osrswikiscraper.NpcInfo)
}
inline PROTOBUF_NDEBUG_INLINE NpcInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::github::nkibler7::osrswikiscraper::NpcInfo& from_msg)
      : ids_{visibility, arena, from.ids_},
        _ids_cached_byte_size_{0},
        name_(arena, from.name_),
        version_(arena, from.version_),
        attributes_(arena, from.attributes_),
        _cached_size_{0} {}

NpcInfo::NpcInfo(
    ::google::protobuf::Arena* arena,
    const NpcInfo& from)
    : ::google::protobuf::Message(arena) {
  NpcInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hitpoints_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, hitpoints_),
           offsetof(Impl_, drange_) -
               offsetof(Impl_, hitpoints_) +
               sizeof(Impl_::drange_));

  // @@protoc_insertion_point(copy_constructor:github.nkibler7.osrswikiscraper.NpcInfo)
}
inline PROTOBUF_NDEBUG_INLINE NpcInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ids_{visibility, arena},
        _ids_cached_byte_size_{0},
        name_(arena),
        version_(arena),
        attributes_(arena),
        _cached_size_{0} {}

inline void NpcInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hitpoints_),
           0,
           offsetof(Impl_, drange_) -
               offsetof(Impl_, hitpoints_) +
               sizeof(Impl_::drange_));
}
NpcInfo::~NpcInfo() {
  // @@protoc_insertion_point(destructor:github.nkibler7.osrswikiscraper.NpcInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NpcInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
  _impl_.attributes_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NpcInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_._cached_size_),
              false,
          },
          &NpcInfo::MergeImpl,
          &NpcInfo::kDescriptorMethods,
          &descriptor_table_npc_5finfos_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 21, 0, 85, 2> NpcInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    21, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4292870144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    21,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NpcInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::github::nkibler7::osrswikiscraper::NpcInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 ids = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.ids_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.name_)}},
    // string version = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.version_)}},
    // int32 hitpoints = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.hitpoints_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.hitpoints_)}},
    // int32 att = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.att_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.att_)}},
    // int32 str = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.str_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.str_)}},
    // int32 def = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.def_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.def_)}},
    // int32 mage = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.mage_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.mage_)}},
    // int32 range = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.range_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.range_)}},
    // int32 attbns = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.attbns_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.attbns_)}},
    // int32 strbns = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.strbns_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.strbns_)}},
    // int32 amagic = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.amagic_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.amagic_)}},
    // int32 mbns = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.mbns_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.mbns_)}},
    // int32 arange = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.arange_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.arange_)}},
    // int32 rngbns = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NpcInfo, _impl_.rngbns_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.rngbns_)}},
    // int32 dstab = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.dstab_)}},
    // int32 dslash = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.dslash_)}},
    // int32 dcrush = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.dcrush_)}},
    // int32 dmagic = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.dmagic_)}},
    // int32 drange = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.drange_)}},
    // string attributes = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.attributes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 ids = 1;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 3;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 hitpoints = 4;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.hitpoints_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 att = 5;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.att_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 str = 6;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 def = 7;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.def_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 mage = 8;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.mage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 range = 9;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 attbns = 10;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.attbns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 strbns = 11;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.strbns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 amagic = 12;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.amagic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 mbns = 13;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.mbns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 arange = 14;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.arange_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 rngbns = 15;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.rngbns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 dstab = 16;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.dstab_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 dslash = 17;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.dslash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 dcrush = 18;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.dcrush_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 dmagic = 19;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.dmagic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 drange = 20;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.drange_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string attributes = 21;
    {PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.attributes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\4\7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\12\0\0"
    "github.nkibler7.osrswikiscraper.NpcInfo"
    "name"
    "version"
    "attributes"
  }},
};

PROTOBUF_NOINLINE void NpcInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:github.nkibler7.osrswikiscraper.NpcInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.attributes_.ClearToEmpty();
  ::memset(&_impl_.hitpoints_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.drange_) -
      reinterpret_cast<char*>(&_impl_.hitpoints_)) + sizeof(_impl_.drange_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NpcInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.nkibler7.osrswikiscraper.NpcInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 ids = 1;
  {
    int byte_size = _impl_._ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_ids(), byte_size, target);
    }
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "github.nkibler7.osrswikiscraper.NpcInfo.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string version = 3;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "github.nkibler7.osrswikiscraper.NpcInfo.version");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 hitpoints = 4;
  if (this->_internal_hitpoints() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_hitpoints(), target);
  }

  // int32 att = 5;
  if (this->_internal_att() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_att(), target);
  }

  // int32 str = 6;
  if (this->_internal_str() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_str(), target);
  }

  // int32 def = 7;
  if (this->_internal_def() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_def(), target);
  }

  // int32 mage = 8;
  if (this->_internal_mage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_mage(), target);
  }

  // int32 range = 9;
  if (this->_internal_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_range(), target);
  }

  // int32 attbns = 10;
  if (this->_internal_attbns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_attbns(), target);
  }

  // int32 strbns = 11;
  if (this->_internal_strbns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_strbns(), target);
  }

  // int32 amagic = 12;
  if (this->_internal_amagic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_amagic(), target);
  }

  // int32 mbns = 13;
  if (this->_internal_mbns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_mbns(), target);
  }

  // int32 arange = 14;
  if (this->_internal_arange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<14>(
            stream, this->_internal_arange(), target);
  }

  // int32 rngbns = 15;
  if (this->_internal_rngbns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<15>(
            stream, this->_internal_rngbns(), target);
  }

  // int32 dstab = 16;
  if (this->_internal_dstab() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this->_internal_dstab(), target);
  }

  // int32 dslash = 17;
  if (this->_internal_dslash() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_dslash(), target);
  }

  // int32 dcrush = 18;
  if (this->_internal_dcrush() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this->_internal_dcrush(), target);
  }

  // int32 dmagic = 19;
  if (this->_internal_dmagic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        19, this->_internal_dmagic(), target);
  }

  // int32 drange = 20;
  if (this->_internal_drange() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        20, this->_internal_drange(), target);
  }

  // string attributes = 21;
  if (!this->_internal_attributes().empty()) {
    const std::string& _s = this->_internal_attributes();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "github.nkibler7.osrswikiscraper.NpcInfo.attributes");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.nkibler7.osrswikiscraper.NpcInfo)
  return target;
}

::size_t NpcInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.nkibler7.osrswikiscraper.NpcInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int32 ids = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_ids())
    ;
    _impl_._ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string version = 3;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string attributes = 21;
  if (!this->_internal_attributes().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_attributes());
  }

  // int32 hitpoints = 4;
  if (this->_internal_hitpoints() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hitpoints());
  }

  // int32 att = 5;
  if (this->_internal_att() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_att());
  }

  // int32 str = 6;
  if (this->_internal_str() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_str());
  }

  // int32 def = 7;
  if (this->_internal_def() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_def());
  }

  // int32 mage = 8;
  if (this->_internal_mage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_mage());
  }

  // int32 range = 9;
  if (this->_internal_range() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_range());
  }

  // int32 attbns = 10;
  if (this->_internal_attbns() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_attbns());
  }

  // int32 strbns = 11;
  if (this->_internal_strbns() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_strbns());
  }

  // int32 amagic = 12;
  if (this->_internal_amagic() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_amagic());
  }

  // int32 mbns = 13;
  if (this->_internal_mbns() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_mbns());
  }

  // int32 arange = 14;
  if (this->_internal_arange() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_arange());
  }

  // int32 rngbns = 15;
  if (this->_internal_rngbns() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_rngbns());
  }

  // int32 dstab = 16;
  if (this->_internal_dstab() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_dstab());
  }

  // int32 dslash = 17;
  if (this->_internal_dslash() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_dslash());
  }

  // int32 dcrush = 18;
  if (this->_internal_dcrush() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_dcrush());
  }

  // int32 dmagic = 19;
  if (this->_internal_dmagic() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_dmagic());
  }

  // int32 drange = 20;
  if (this->_internal_drange() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_drange());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NpcInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NpcInfo*>(&to_msg);
  auto& from = static_cast<const NpcInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:github.nkibler7.osrswikiscraper.NpcInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ids()->MergeFrom(from._internal_ids());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_attributes().empty()) {
    _this->_internal_set_attributes(from._internal_attributes());
  }
  if (from._internal_hitpoints() != 0) {
    _this->_impl_.hitpoints_ = from._impl_.hitpoints_;
  }
  if (from._internal_att() != 0) {
    _this->_impl_.att_ = from._impl_.att_;
  }
  if (from._internal_str() != 0) {
    _this->_impl_.str_ = from._impl_.str_;
  }
  if (from._internal_def() != 0) {
    _this->_impl_.def_ = from._impl_.def_;
  }
  if (from._internal_mage() != 0) {
    _this->_impl_.mage_ = from._impl_.mage_;
  }
  if (from._internal_range() != 0) {
    _this->_impl_.range_ = from._impl_.range_;
  }
  if (from._internal_attbns() != 0) {
    _this->_impl_.attbns_ = from._impl_.attbns_;
  }
  if (from._internal_strbns() != 0) {
    _this->_impl_.strbns_ = from._impl_.strbns_;
  }
  if (from._internal_amagic() != 0) {
    _this->_impl_.amagic_ = from._impl_.amagic_;
  }
  if (from._internal_mbns() != 0) {
    _this->_impl_.mbns_ = from._impl_.mbns_;
  }
  if (from._internal_arange() != 0) {
    _this->_impl_.arange_ = from._impl_.arange_;
  }
  if (from._internal_rngbns() != 0) {
    _this->_impl_.rngbns_ = from._impl_.rngbns_;
  }
  if (from._internal_dstab() != 0) {
    _this->_impl_.dstab_ = from._impl_.dstab_;
  }
  if (from._internal_dslash() != 0) {
    _this->_impl_.dslash_ = from._impl_.dslash_;
  }
  if (from._internal_dcrush() != 0) {
    _this->_impl_.dcrush_ = from._impl_.dcrush_;
  }
  if (from._internal_dmagic() != 0) {
    _this->_impl_.dmagic_ = from._impl_.dmagic_;
  }
  if (from._internal_drange() != 0) {
    _this->_impl_.drange_ = from._impl_.drange_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NpcInfo::CopyFrom(const NpcInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.nkibler7.osrswikiscraper.NpcInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NpcInfo::InternalSwap(NpcInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.attributes_, &other->_impl_.attributes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.drange_)
      + sizeof(NpcInfo::_impl_.drange_)
      - PROTOBUF_FIELD_OFFSET(NpcInfo, _impl_.hitpoints_)>(
          reinterpret_cast<char*>(&_impl_.hitpoints_),
          reinterpret_cast<char*>(&other->_impl_.hitpoints_));
}

::google::protobuf::Metadata NpcInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace osrswikiscraper
}  // namespace nkibler7
}  // namespace github
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_npc_5finfos_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
