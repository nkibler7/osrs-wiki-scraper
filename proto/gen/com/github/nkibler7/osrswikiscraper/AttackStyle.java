// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: weapons.proto

package com.github.nkibler7.osrswikiscraper;

/**
 * <pre>
 * The style of the attack. This enum contains values for all 3 forms of combat in the game (melee,
 * ranged, and magic).
 * </pre>
 *
 * Protobuf enum {@code github.nkibler7.osrswikiscraper.AttackStyle}
 */
public enum AttackStyle
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * The default (unspecified) value. This is not a valid selection in the game.
   * </pre>
   *
   * <code>ATTACK_STYLE_UNSPECIFIED = 0;</code>
   */
  ATTACK_STYLE_UNSPECIFIED(0),
  /**
   * <pre>
   * When using the accurate melee style, for every point of damage a player deals, they gain 4
   * experience in Attack and 1.33 experience in Hitpoints. Using the accurate style provides an
   * invisible +3 boost to your Attack level.
   * </pre>
   *
   * <code>ATTACK_STYLE_MELEE_ACCURATE = 1;</code>
   */
  ATTACK_STYLE_MELEE_ACCURATE(1),
  /**
   * <pre>
   * When using the aggressive melee style, for every point of damage a player deals, they gain 4
   * experience in Strength and 1.33 experience in Hitpoints. Using the aggressive style provides an
   * invisible +3 boost to your Strength level.
   * </pre>
   *
   * <code>ATTACK_STYLE_MELEE_AGGRESSIVE = 2;</code>
   */
  ATTACK_STYLE_MELEE_AGGRESSIVE(2),
  /**
   * <pre>
   * When using the defensive melee style, for every point of damage a player deals, they gain 4
   * experience in Defence and 1.33 experience in Hitpoints. Using the defensive style provides an
   * invisible +3 boost to your Defence level.
   * </pre>
   *
   * <code>ATTACK_STYLE_MELEE_DEFENSIVE = 3;</code>
   */
  ATTACK_STYLE_MELEE_DEFENSIVE(3),
  /**
   * <pre>
   * When using the controlled melee style, for every point of damage a player deals, they gain 1.33
   * experience each in Attack, Strength, Hitpoints, and Defence. Using the controlled style
   * provides an invisible +1 boost to your Attack, Strength, and Defence levels.
   * </pre>
   *
   * <code>ATTACK_STYLE_MELEE_CONTROLLED = 4;</code>
   */
  ATTACK_STYLE_MELEE_CONTROLLED(4),
  /**
   * <pre>
   * When using the accurate ranged style, for every point of damage a player deals, they gain 4
   * experience in Ranged and 1.33 experience in Hitpoints. The accurate style allows a player to
   * shoot less often than in the rapid style, however they receive a +3 invisible bonus to their
   * Ranged level, thereby increasing accuracy and damage.
   * </pre>
   *
   * <code>ATTACK_STYLE_RANGED_ACCURATE = 5;</code>
   */
  ATTACK_STYLE_RANGED_ACCURATE(5),
  /**
   * <pre>
   * When using the rapid ranged style, for every point of damage a player deals, they gain 4
   * experience in Ranged and 1.33 experience in Hitpoints. The rapid style allows a player to shoot
   * more often than in the accurate style, but a player is more likely to miss (i.e. dealing 0
   * damage).
   * </pre>
   *
   * <code>ATTACK_STYLE_RANGED_RAPID = 6;</code>
   */
  ATTACK_STYLE_RANGED_RAPID(6),
  /**
   * <pre>
   * When using the longrange ranged style, for every point of damage a player deals, they gain 2
   * experience in Ranged, 2 experience in Defence, and 1.33 in Hitpoints. Attack range is increased
   * with this attack style.
   * Using the longrange style provides an invisible +3 boost to your Defence level.
   * </pre>
   *
   * <code>ATTACK_STYLE_RANGED_LONGRANGE = 7;</code>
   */
  ATTACK_STYLE_RANGED_LONGRANGE(7),
  /**
   * <pre>
   * If a player chooses the standard magic style for autocasting, they perform a normal magical
   * attack and for each point of damage the spell deals, they gain 2 experience in Magic and 1.33
   * experience in Hitpoints, in addition to the Magic experience from casting the spell.
   * </pre>
   *
   * <code>ATTACK_STYLE_MAGIC_AUTOCAST = 8;</code>
   */
  ATTACK_STYLE_MAGIC_AUTOCAST(8),
  /**
   * <pre>
   * If a player chooses the defensive magic style for autocasting, they perform a normal magical
   * attack and for each point of damage the spell deals, they gain 1.33 experience in Magic, 1
   * experience in Defence, and 1.33 experience in Hitpoints. The experience from casting the spell
   * is still given entirely to Magic.
   * </pre>
   *
   * <code>ATTACK_STYLE_MAGIC_DEFENSIVE_AUTOCAST = 9;</code>
   */
  ATTACK_STYLE_MAGIC_DEFENSIVE_AUTOCAST(9),
  /**
   * <code>ATTACK_STYLE_MAGIC_POWERED_STAFF_ACCURATE = 10;</code>
   */
  ATTACK_STYLE_MAGIC_POWERED_STAFF_ACCURATE(10),
  /**
   * <code>ATTACK_STYLE_MAGIC_POWERED_STAFF_LONGRANGE = 11;</code>
   */
  ATTACK_STYLE_MAGIC_POWERED_STAFF_LONGRANGE(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * The default (unspecified) value. This is not a valid selection in the game.
   * </pre>
   *
   * <code>ATTACK_STYLE_UNSPECIFIED = 0;</code>
   */
  public static final int ATTACK_STYLE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * When using the accurate melee style, for every point of damage a player deals, they gain 4
   * experience in Attack and 1.33 experience in Hitpoints. Using the accurate style provides an
   * invisible +3 boost to your Attack level.
   * </pre>
   *
   * <code>ATTACK_STYLE_MELEE_ACCURATE = 1;</code>
   */
  public static final int ATTACK_STYLE_MELEE_ACCURATE_VALUE = 1;
  /**
   * <pre>
   * When using the aggressive melee style, for every point of damage a player deals, they gain 4
   * experience in Strength and 1.33 experience in Hitpoints. Using the aggressive style provides an
   * invisible +3 boost to your Strength level.
   * </pre>
   *
   * <code>ATTACK_STYLE_MELEE_AGGRESSIVE = 2;</code>
   */
  public static final int ATTACK_STYLE_MELEE_AGGRESSIVE_VALUE = 2;
  /**
   * <pre>
   * When using the defensive melee style, for every point of damage a player deals, they gain 4
   * experience in Defence and 1.33 experience in Hitpoints. Using the defensive style provides an
   * invisible +3 boost to your Defence level.
   * </pre>
   *
   * <code>ATTACK_STYLE_MELEE_DEFENSIVE = 3;</code>
   */
  public static final int ATTACK_STYLE_MELEE_DEFENSIVE_VALUE = 3;
  /**
   * <pre>
   * When using the controlled melee style, for every point of damage a player deals, they gain 1.33
   * experience each in Attack, Strength, Hitpoints, and Defence. Using the controlled style
   * provides an invisible +1 boost to your Attack, Strength, and Defence levels.
   * </pre>
   *
   * <code>ATTACK_STYLE_MELEE_CONTROLLED = 4;</code>
   */
  public static final int ATTACK_STYLE_MELEE_CONTROLLED_VALUE = 4;
  /**
   * <pre>
   * When using the accurate ranged style, for every point of damage a player deals, they gain 4
   * experience in Ranged and 1.33 experience in Hitpoints. The accurate style allows a player to
   * shoot less often than in the rapid style, however they receive a +3 invisible bonus to their
   * Ranged level, thereby increasing accuracy and damage.
   * </pre>
   *
   * <code>ATTACK_STYLE_RANGED_ACCURATE = 5;</code>
   */
  public static final int ATTACK_STYLE_RANGED_ACCURATE_VALUE = 5;
  /**
   * <pre>
   * When using the rapid ranged style, for every point of damage a player deals, they gain 4
   * experience in Ranged and 1.33 experience in Hitpoints. The rapid style allows a player to shoot
   * more often than in the accurate style, but a player is more likely to miss (i.e. dealing 0
   * damage).
   * </pre>
   *
   * <code>ATTACK_STYLE_RANGED_RAPID = 6;</code>
   */
  public static final int ATTACK_STYLE_RANGED_RAPID_VALUE = 6;
  /**
   * <pre>
   * When using the longrange ranged style, for every point of damage a player deals, they gain 2
   * experience in Ranged, 2 experience in Defence, and 1.33 in Hitpoints. Attack range is increased
   * with this attack style.
   * Using the longrange style provides an invisible +3 boost to your Defence level.
   * </pre>
   *
   * <code>ATTACK_STYLE_RANGED_LONGRANGE = 7;</code>
   */
  public static final int ATTACK_STYLE_RANGED_LONGRANGE_VALUE = 7;
  /**
   * <pre>
   * If a player chooses the standard magic style for autocasting, they perform a normal magical
   * attack and for each point of damage the spell deals, they gain 2 experience in Magic and 1.33
   * experience in Hitpoints, in addition to the Magic experience from casting the spell.
   * </pre>
   *
   * <code>ATTACK_STYLE_MAGIC_AUTOCAST = 8;</code>
   */
  public static final int ATTACK_STYLE_MAGIC_AUTOCAST_VALUE = 8;
  /**
   * <pre>
   * If a player chooses the defensive magic style for autocasting, they perform a normal magical
   * attack and for each point of damage the spell deals, they gain 1.33 experience in Magic, 1
   * experience in Defence, and 1.33 experience in Hitpoints. The experience from casting the spell
   * is still given entirely to Magic.
   * </pre>
   *
   * <code>ATTACK_STYLE_MAGIC_DEFENSIVE_AUTOCAST = 9;</code>
   */
  public static final int ATTACK_STYLE_MAGIC_DEFENSIVE_AUTOCAST_VALUE = 9;
  /**
   * <code>ATTACK_STYLE_MAGIC_POWERED_STAFF_ACCURATE = 10;</code>
   */
  public static final int ATTACK_STYLE_MAGIC_POWERED_STAFF_ACCURATE_VALUE = 10;
  /**
   * <code>ATTACK_STYLE_MAGIC_POWERED_STAFF_LONGRANGE = 11;</code>
   */
  public static final int ATTACK_STYLE_MAGIC_POWERED_STAFF_LONGRANGE_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AttackStyle valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AttackStyle forNumber(int value) {
    switch (value) {
      case 0: return ATTACK_STYLE_UNSPECIFIED;
      case 1: return ATTACK_STYLE_MELEE_ACCURATE;
      case 2: return ATTACK_STYLE_MELEE_AGGRESSIVE;
      case 3: return ATTACK_STYLE_MELEE_DEFENSIVE;
      case 4: return ATTACK_STYLE_MELEE_CONTROLLED;
      case 5: return ATTACK_STYLE_RANGED_ACCURATE;
      case 6: return ATTACK_STYLE_RANGED_RAPID;
      case 7: return ATTACK_STYLE_RANGED_LONGRANGE;
      case 8: return ATTACK_STYLE_MAGIC_AUTOCAST;
      case 9: return ATTACK_STYLE_MAGIC_DEFENSIVE_AUTOCAST;
      case 10: return ATTACK_STYLE_MAGIC_POWERED_STAFF_ACCURATE;
      case 11: return ATTACK_STYLE_MAGIC_POWERED_STAFF_LONGRANGE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AttackStyle>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AttackStyle> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AttackStyle>() {
          public AttackStyle findValueByNumber(int number) {
            return AttackStyle.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final AttackStyle[] VALUES = values();

  public static AttackStyle valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AttackStyle(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:github.nkibler7.osrswikiscraper.AttackStyle)
}

