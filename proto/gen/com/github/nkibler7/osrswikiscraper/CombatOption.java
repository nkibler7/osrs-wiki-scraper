// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: weapons.proto

// Protobuf Java Version: 3.25.1
package com.github.nkibler7.osrswikiscraper;

/**
 * <pre>
 * An option available to the user in the Combat Options interface to select their attack style.
 * </pre>
 *
 * Protobuf type {@code github.nkibler7.osrswikiscraper.CombatOption}
 */
public final class CombatOption extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:github.nkibler7.osrswikiscraper.CombatOption)
    CombatOptionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CombatOption.newBuilder() to construct.
  private CombatOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CombatOption() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CombatOption();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.nkibler7.osrswikiscraper.CombatOption.class, com.github.nkibler7.osrswikiscraper.CombatOption.Builder.class);
  }

  public interface ModifiersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Attack level.
     * </pre>
     *
     * <code>int32 attack_modifier = 1;</code>
     * @return The attackModifier.
     */
    int getAttackModifier();

    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Strength level.
     * </pre>
     *
     * <code>int32 strength_modifier = 2;</code>
     * @return The strengthModifier.
     */
    int getStrengthModifier();

    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Defence level.
     * </pre>
     *
     * <code>int32 defence_modifier = 3;</code>
     * @return The defenceModifier.
     */
    int getDefenceModifier();

    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Ranged level.
     * </pre>
     *
     * <code>int32 ranged_modifier = 4;</code>
     * @return The rangedModifier.
     */
    int getRangedModifier();

    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Magic level.
     * </pre>
     *
     * <code>int32 magic_modifier = 5;</code>
     * @return The magicModifier.
     */
    int getMagicModifier();

    /**
     * <pre>
     * The modifier value to add to (or subtract from) the weapon's base attack speed (in ticks).
     * </pre>
     *
     * <code>int32 attack_speed_modifier = 6;</code>
     * @return The attackSpeedModifier.
     */
    int getAttackSpeedModifier();

    /**
     * <pre>
     * The modifier value to add to (or subtract from) the weapon's base attack range (in tiles).
     * </pre>
     *
     * <code>int32 attack_range_modifier = 7;</code>
     * @return The attackRangeModifier.
     */
    int getAttackRangeModifier();
  }
  /**
   * <pre>
   * The set of modifiers applied by a given CombatOption, like accuracy &amp; attack speed modifiers.
   * These values are primarily used in calculating combat attack &amp; defence rolls.
   * </pre>
   *
   * Protobuf type {@code github.nkibler7.osrswikiscraper.CombatOption.Modifiers}
   */
  public static final class Modifiers extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
      ModifiersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Modifiers.newBuilder() to construct.
    private Modifiers(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Modifiers() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Modifiers();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_Modifiers_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_Modifiers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.class, com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.Builder.class);
    }

    public static final int ATTACK_MODIFIER_FIELD_NUMBER = 1;
    private int attackModifier_ = 0;
    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Attack level.
     * </pre>
     *
     * <code>int32 attack_modifier = 1;</code>
     * @return The attackModifier.
     */
    @java.lang.Override
    public int getAttackModifier() {
      return attackModifier_;
    }

    public static final int STRENGTH_MODIFIER_FIELD_NUMBER = 2;
    private int strengthModifier_ = 0;
    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Strength level.
     * </pre>
     *
     * <code>int32 strength_modifier = 2;</code>
     * @return The strengthModifier.
     */
    @java.lang.Override
    public int getStrengthModifier() {
      return strengthModifier_;
    }

    public static final int DEFENCE_MODIFIER_FIELD_NUMBER = 3;
    private int defenceModifier_ = 0;
    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Defence level.
     * </pre>
     *
     * <code>int32 defence_modifier = 3;</code>
     * @return The defenceModifier.
     */
    @java.lang.Override
    public int getDefenceModifier() {
      return defenceModifier_;
    }

    public static final int RANGED_MODIFIER_FIELD_NUMBER = 4;
    private int rangedModifier_ = 0;
    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Ranged level.
     * </pre>
     *
     * <code>int32 ranged_modifier = 4;</code>
     * @return The rangedModifier.
     */
    @java.lang.Override
    public int getRangedModifier() {
      return rangedModifier_;
    }

    public static final int MAGIC_MODIFIER_FIELD_NUMBER = 5;
    private int magicModifier_ = 0;
    /**
     * <pre>
     * The modifier value to add to (or subtract from) the player's effective Magic level.
     * </pre>
     *
     * <code>int32 magic_modifier = 5;</code>
     * @return The magicModifier.
     */
    @java.lang.Override
    public int getMagicModifier() {
      return magicModifier_;
    }

    public static final int ATTACK_SPEED_MODIFIER_FIELD_NUMBER = 6;
    private int attackSpeedModifier_ = 0;
    /**
     * <pre>
     * The modifier value to add to (or subtract from) the weapon's base attack speed (in ticks).
     * </pre>
     *
     * <code>int32 attack_speed_modifier = 6;</code>
     * @return The attackSpeedModifier.
     */
    @java.lang.Override
    public int getAttackSpeedModifier() {
      return attackSpeedModifier_;
    }

    public static final int ATTACK_RANGE_MODIFIER_FIELD_NUMBER = 7;
    private int attackRangeModifier_ = 0;
    /**
     * <pre>
     * The modifier value to add to (or subtract from) the weapon's base attack range (in tiles).
     * </pre>
     *
     * <code>int32 attack_range_modifier = 7;</code>
     * @return The attackRangeModifier.
     */
    @java.lang.Override
    public int getAttackRangeModifier() {
      return attackRangeModifier_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (attackModifier_ != 0) {
        output.writeInt32(1, attackModifier_);
      }
      if (strengthModifier_ != 0) {
        output.writeInt32(2, strengthModifier_);
      }
      if (defenceModifier_ != 0) {
        output.writeInt32(3, defenceModifier_);
      }
      if (rangedModifier_ != 0) {
        output.writeInt32(4, rangedModifier_);
      }
      if (magicModifier_ != 0) {
        output.writeInt32(5, magicModifier_);
      }
      if (attackSpeedModifier_ != 0) {
        output.writeInt32(6, attackSpeedModifier_);
      }
      if (attackRangeModifier_ != 0) {
        output.writeInt32(7, attackRangeModifier_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (attackModifier_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, attackModifier_);
      }
      if (strengthModifier_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, strengthModifier_);
      }
      if (defenceModifier_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, defenceModifier_);
      }
      if (rangedModifier_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rangedModifier_);
      }
      if (magicModifier_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, magicModifier_);
      }
      if (attackSpeedModifier_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, attackSpeedModifier_);
      }
      if (attackRangeModifier_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, attackRangeModifier_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers)) {
        return super.equals(obj);
      }
      com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers other = (com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers) obj;

      if (getAttackModifier()
          != other.getAttackModifier()) return false;
      if (getStrengthModifier()
          != other.getStrengthModifier()) return false;
      if (getDefenceModifier()
          != other.getDefenceModifier()) return false;
      if (getRangedModifier()
          != other.getRangedModifier()) return false;
      if (getMagicModifier()
          != other.getMagicModifier()) return false;
      if (getAttackSpeedModifier()
          != other.getAttackSpeedModifier()) return false;
      if (getAttackRangeModifier()
          != other.getAttackRangeModifier()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ATTACK_MODIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getAttackModifier();
      hash = (37 * hash) + STRENGTH_MODIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getStrengthModifier();
      hash = (37 * hash) + DEFENCE_MODIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getDefenceModifier();
      hash = (37 * hash) + RANGED_MODIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getRangedModifier();
      hash = (37 * hash) + MAGIC_MODIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getMagicModifier();
      hash = (37 * hash) + ATTACK_SPEED_MODIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getAttackSpeedModifier();
      hash = (37 * hash) + ATTACK_RANGE_MODIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getAttackRangeModifier();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The set of modifiers applied by a given CombatOption, like accuracy &amp; attack speed modifiers.
     * These values are primarily used in calculating combat attack &amp; defence rolls.
     * </pre>
     *
     * Protobuf type {@code github.nkibler7.osrswikiscraper.CombatOption.Modifiers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
        com.github.nkibler7.osrswikiscraper.CombatOption.ModifiersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_Modifiers_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_Modifiers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.class, com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.Builder.class);
      }

      // Construct using com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        attackModifier_ = 0;
        strengthModifier_ = 0;
        defenceModifier_ = 0;
        rangedModifier_ = 0;
        magicModifier_ = 0;
        attackSpeedModifier_ = 0;
        attackRangeModifier_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_Modifiers_descriptor;
      }

      @java.lang.Override
      public com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers getDefaultInstanceForType() {
        return com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers build() {
        com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers buildPartial() {
        com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers result = new com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.attackModifier_ = attackModifier_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.strengthModifier_ = strengthModifier_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.defenceModifier_ = defenceModifier_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.rangedModifier_ = rangedModifier_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.magicModifier_ = magicModifier_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.attackSpeedModifier_ = attackSpeedModifier_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.attackRangeModifier_ = attackRangeModifier_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers) {
          return mergeFrom((com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers other) {
        if (other == com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.getDefaultInstance()) return this;
        if (other.getAttackModifier() != 0) {
          setAttackModifier(other.getAttackModifier());
        }
        if (other.getStrengthModifier() != 0) {
          setStrengthModifier(other.getStrengthModifier());
        }
        if (other.getDefenceModifier() != 0) {
          setDefenceModifier(other.getDefenceModifier());
        }
        if (other.getRangedModifier() != 0) {
          setRangedModifier(other.getRangedModifier());
        }
        if (other.getMagicModifier() != 0) {
          setMagicModifier(other.getMagicModifier());
        }
        if (other.getAttackSpeedModifier() != 0) {
          setAttackSpeedModifier(other.getAttackSpeedModifier());
        }
        if (other.getAttackRangeModifier() != 0) {
          setAttackRangeModifier(other.getAttackRangeModifier());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                attackModifier_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                strengthModifier_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                defenceModifier_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                rangedModifier_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                magicModifier_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                attackSpeedModifier_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                attackRangeModifier_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int attackModifier_ ;
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Attack level.
       * </pre>
       *
       * <code>int32 attack_modifier = 1;</code>
       * @return The attackModifier.
       */
      @java.lang.Override
      public int getAttackModifier() {
        return attackModifier_;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Attack level.
       * </pre>
       *
       * <code>int32 attack_modifier = 1;</code>
       * @param value The attackModifier to set.
       * @return This builder for chaining.
       */
      public Builder setAttackModifier(int value) {

        attackModifier_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Attack level.
       * </pre>
       *
       * <code>int32 attack_modifier = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackModifier() {
        bitField0_ = (bitField0_ & ~0x00000001);
        attackModifier_ = 0;
        onChanged();
        return this;
      }

      private int strengthModifier_ ;
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Strength level.
       * </pre>
       *
       * <code>int32 strength_modifier = 2;</code>
       * @return The strengthModifier.
       */
      @java.lang.Override
      public int getStrengthModifier() {
        return strengthModifier_;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Strength level.
       * </pre>
       *
       * <code>int32 strength_modifier = 2;</code>
       * @param value The strengthModifier to set.
       * @return This builder for chaining.
       */
      public Builder setStrengthModifier(int value) {

        strengthModifier_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Strength level.
       * </pre>
       *
       * <code>int32 strength_modifier = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrengthModifier() {
        bitField0_ = (bitField0_ & ~0x00000002);
        strengthModifier_ = 0;
        onChanged();
        return this;
      }

      private int defenceModifier_ ;
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Defence level.
       * </pre>
       *
       * <code>int32 defence_modifier = 3;</code>
       * @return The defenceModifier.
       */
      @java.lang.Override
      public int getDefenceModifier() {
        return defenceModifier_;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Defence level.
       * </pre>
       *
       * <code>int32 defence_modifier = 3;</code>
       * @param value The defenceModifier to set.
       * @return This builder for chaining.
       */
      public Builder setDefenceModifier(int value) {

        defenceModifier_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Defence level.
       * </pre>
       *
       * <code>int32 defence_modifier = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefenceModifier() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defenceModifier_ = 0;
        onChanged();
        return this;
      }

      private int rangedModifier_ ;
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Ranged level.
       * </pre>
       *
       * <code>int32 ranged_modifier = 4;</code>
       * @return The rangedModifier.
       */
      @java.lang.Override
      public int getRangedModifier() {
        return rangedModifier_;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Ranged level.
       * </pre>
       *
       * <code>int32 ranged_modifier = 4;</code>
       * @param value The rangedModifier to set.
       * @return This builder for chaining.
       */
      public Builder setRangedModifier(int value) {

        rangedModifier_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Ranged level.
       * </pre>
       *
       * <code>int32 ranged_modifier = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRangedModifier() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rangedModifier_ = 0;
        onChanged();
        return this;
      }

      private int magicModifier_ ;
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Magic level.
       * </pre>
       *
       * <code>int32 magic_modifier = 5;</code>
       * @return The magicModifier.
       */
      @java.lang.Override
      public int getMagicModifier() {
        return magicModifier_;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Magic level.
       * </pre>
       *
       * <code>int32 magic_modifier = 5;</code>
       * @param value The magicModifier to set.
       * @return This builder for chaining.
       */
      public Builder setMagicModifier(int value) {

        magicModifier_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the player's effective Magic level.
       * </pre>
       *
       * <code>int32 magic_modifier = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMagicModifier() {
        bitField0_ = (bitField0_ & ~0x00000010);
        magicModifier_ = 0;
        onChanged();
        return this;
      }

      private int attackSpeedModifier_ ;
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the weapon's base attack speed (in ticks).
       * </pre>
       *
       * <code>int32 attack_speed_modifier = 6;</code>
       * @return The attackSpeedModifier.
       */
      @java.lang.Override
      public int getAttackSpeedModifier() {
        return attackSpeedModifier_;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the weapon's base attack speed (in ticks).
       * </pre>
       *
       * <code>int32 attack_speed_modifier = 6;</code>
       * @param value The attackSpeedModifier to set.
       * @return This builder for chaining.
       */
      public Builder setAttackSpeedModifier(int value) {

        attackSpeedModifier_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the weapon's base attack speed (in ticks).
       * </pre>
       *
       * <code>int32 attack_speed_modifier = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackSpeedModifier() {
        bitField0_ = (bitField0_ & ~0x00000020);
        attackSpeedModifier_ = 0;
        onChanged();
        return this;
      }

      private int attackRangeModifier_ ;
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the weapon's base attack range (in tiles).
       * </pre>
       *
       * <code>int32 attack_range_modifier = 7;</code>
       * @return The attackRangeModifier.
       */
      @java.lang.Override
      public int getAttackRangeModifier() {
        return attackRangeModifier_;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the weapon's base attack range (in tiles).
       * </pre>
       *
       * <code>int32 attack_range_modifier = 7;</code>
       * @param value The attackRangeModifier to set.
       * @return This builder for chaining.
       */
      public Builder setAttackRangeModifier(int value) {

        attackRangeModifier_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The modifier value to add to (or subtract from) the weapon's base attack range (in tiles).
       * </pre>
       *
       * <code>int32 attack_range_modifier = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackRangeModifier() {
        bitField0_ = (bitField0_ & ~0x00000040);
        attackRangeModifier_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
    }

    // @@protoc_insertion_point(class_scope:github.nkibler7.osrswikiscraper.CombatOption.Modifiers)
    private static final com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers();
    }

    public static com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Modifiers>
        PARSER = new com.google.protobuf.AbstractParser<Modifiers>() {
      @java.lang.Override
      public Modifiers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Modifiers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Modifiers> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  private int combatTypeCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object combatType_;
  public enum CombatTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    MELEE(3),
    RANGED(4),
    MAGIC(5),
    COMBATTYPE_NOT_SET(0);
    private final int value;
    private CombatTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CombatTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static CombatTypeCase forNumber(int value) {
      switch (value) {
        case 3: return MELEE;
        case 4: return RANGED;
        case 5: return MAGIC;
        case 0: return COMBATTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public CombatTypeCase
  getCombatTypeCase() {
    return CombatTypeCase.forNumber(
        combatTypeCase_);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The name associated with this attack option in the Combat Options interface.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name associated with this attack option in the Combat Options interface.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MODIFIERS_FIELD_NUMBER = 2;
  private com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers_;
  /**
   * <pre>
   * The set of modifiers applied by this combat option.
   * </pre>
   *
   * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
   * @return Whether the modifiers field is set.
   */
  @java.lang.Override
  public boolean hasModifiers() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The set of modifiers applied by this combat option.
   * </pre>
   *
   * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
   * @return The modifiers.
   */
  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers getModifiers() {
    return modifiers_ == null ? com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.getDefaultInstance() : modifiers_;
  }
  /**
   * <pre>
   * The set of modifiers applied by this combat option.
   * </pre>
   *
   * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
   */
  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.CombatOption.ModifiersOrBuilder getModifiersOrBuilder() {
    return modifiers_ == null ? com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.getDefaultInstance() : modifiers_;
  }

  public static final int MELEE_FIELD_NUMBER = 3;
  /**
   * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
   * @return Whether the melee field is set.
   */
  @java.lang.Override
  public boolean hasMelee() {
    return combatTypeCase_ == 3;
  }
  /**
   * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
   * @return The melee.
   */
  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.MeleeCombatOption getMelee() {
    if (combatTypeCase_ == 3) {
       return (com.github.nkibler7.osrswikiscraper.MeleeCombatOption) combatType_;
    }
    return com.github.nkibler7.osrswikiscraper.MeleeCombatOption.getDefaultInstance();
  }
  /**
   * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
   */
  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.MeleeCombatOptionOrBuilder getMeleeOrBuilder() {
    if (combatTypeCase_ == 3) {
       return (com.github.nkibler7.osrswikiscraper.MeleeCombatOption) combatType_;
    }
    return com.github.nkibler7.osrswikiscraper.MeleeCombatOption.getDefaultInstance();
  }

  public static final int RANGED_FIELD_NUMBER = 4;
  /**
   * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
   * @return Whether the ranged field is set.
   */
  @java.lang.Override
  public boolean hasRanged() {
    return combatTypeCase_ == 4;
  }
  /**
   * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
   * @return The ranged.
   */
  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.RangedCombatOption getRanged() {
    if (combatTypeCase_ == 4) {
       return (com.github.nkibler7.osrswikiscraper.RangedCombatOption) combatType_;
    }
    return com.github.nkibler7.osrswikiscraper.RangedCombatOption.getDefaultInstance();
  }
  /**
   * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
   */
  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.RangedCombatOptionOrBuilder getRangedOrBuilder() {
    if (combatTypeCase_ == 4) {
       return (com.github.nkibler7.osrswikiscraper.RangedCombatOption) combatType_;
    }
    return com.github.nkibler7.osrswikiscraper.RangedCombatOption.getDefaultInstance();
  }

  public static final int MAGIC_FIELD_NUMBER = 5;
  /**
   * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
   * @return Whether the magic field is set.
   */
  @java.lang.Override
  public boolean hasMagic() {
    return combatTypeCase_ == 5;
  }
  /**
   * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
   * @return The magic.
   */
  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.MagicCombatOption getMagic() {
    if (combatTypeCase_ == 5) {
       return (com.github.nkibler7.osrswikiscraper.MagicCombatOption) combatType_;
    }
    return com.github.nkibler7.osrswikiscraper.MagicCombatOption.getDefaultInstance();
  }
  /**
   * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
   */
  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.MagicCombatOptionOrBuilder getMagicOrBuilder() {
    if (combatTypeCase_ == 5) {
       return (com.github.nkibler7.osrswikiscraper.MagicCombatOption) combatType_;
    }
    return com.github.nkibler7.osrswikiscraper.MagicCombatOption.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getModifiers());
    }
    if (combatTypeCase_ == 3) {
      output.writeMessage(3, (com.github.nkibler7.osrswikiscraper.MeleeCombatOption) combatType_);
    }
    if (combatTypeCase_ == 4) {
      output.writeMessage(4, (com.github.nkibler7.osrswikiscraper.RangedCombatOption) combatType_);
    }
    if (combatTypeCase_ == 5) {
      output.writeMessage(5, (com.github.nkibler7.osrswikiscraper.MagicCombatOption) combatType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getModifiers());
    }
    if (combatTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.github.nkibler7.osrswikiscraper.MeleeCombatOption) combatType_);
    }
    if (combatTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.github.nkibler7.osrswikiscraper.RangedCombatOption) combatType_);
    }
    if (combatTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.github.nkibler7.osrswikiscraper.MagicCombatOption) combatType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.nkibler7.osrswikiscraper.CombatOption)) {
      return super.equals(obj);
    }
    com.github.nkibler7.osrswikiscraper.CombatOption other = (com.github.nkibler7.osrswikiscraper.CombatOption) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasModifiers() != other.hasModifiers()) return false;
    if (hasModifiers()) {
      if (!getModifiers()
          .equals(other.getModifiers())) return false;
    }
    if (!getCombatTypeCase().equals(other.getCombatTypeCase())) return false;
    switch (combatTypeCase_) {
      case 3:
        if (!getMelee()
            .equals(other.getMelee())) return false;
        break;
      case 4:
        if (!getRanged()
            .equals(other.getRanged())) return false;
        break;
      case 5:
        if (!getMagic()
            .equals(other.getMagic())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasModifiers()) {
      hash = (37 * hash) + MODIFIERS_FIELD_NUMBER;
      hash = (53 * hash) + getModifiers().hashCode();
    }
    switch (combatTypeCase_) {
      case 3:
        hash = (37 * hash) + MELEE_FIELD_NUMBER;
        hash = (53 * hash) + getMelee().hashCode();
        break;
      case 4:
        hash = (37 * hash) + RANGED_FIELD_NUMBER;
        hash = (53 * hash) + getRanged().hashCode();
        break;
      case 5:
        hash = (37 * hash) + MAGIC_FIELD_NUMBER;
        hash = (53 * hash) + getMagic().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.nkibler7.osrswikiscraper.CombatOption parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.nkibler7.osrswikiscraper.CombatOption parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.nkibler7.osrswikiscraper.CombatOption parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.nkibler7.osrswikiscraper.CombatOption prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An option available to the user in the Combat Options interface to select their attack style.
   * </pre>
   *
   * Protobuf type {@code github.nkibler7.osrswikiscraper.CombatOption}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:github.nkibler7.osrswikiscraper.CombatOption)
      com.github.nkibler7.osrswikiscraper.CombatOptionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.nkibler7.osrswikiscraper.CombatOption.class, com.github.nkibler7.osrswikiscraper.CombatOption.Builder.class);
    }

    // Construct using com.github.nkibler7.osrswikiscraper.CombatOption.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getModifiersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      modifiers_ = null;
      if (modifiersBuilder_ != null) {
        modifiersBuilder_.dispose();
        modifiersBuilder_ = null;
      }
      if (meleeBuilder_ != null) {
        meleeBuilder_.clear();
      }
      if (rangedBuilder_ != null) {
        rangedBuilder_.clear();
      }
      if (magicBuilder_ != null) {
        magicBuilder_.clear();
      }
      combatTypeCase_ = 0;
      combatType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.internal_static_github_nkibler7_osrswikiscraper_CombatOption_descriptor;
    }

    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.CombatOption getDefaultInstanceForType() {
      return com.github.nkibler7.osrswikiscraper.CombatOption.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.CombatOption build() {
      com.github.nkibler7.osrswikiscraper.CombatOption result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.CombatOption buildPartial() {
      com.github.nkibler7.osrswikiscraper.CombatOption result = new com.github.nkibler7.osrswikiscraper.CombatOption(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.nkibler7.osrswikiscraper.CombatOption result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.modifiers_ = modifiersBuilder_ == null
            ? modifiers_
            : modifiersBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(com.github.nkibler7.osrswikiscraper.CombatOption result) {
      result.combatTypeCase_ = combatTypeCase_;
      result.combatType_ = this.combatType_;
      if (combatTypeCase_ == 3 &&
          meleeBuilder_ != null) {
        result.combatType_ = meleeBuilder_.build();
      }
      if (combatTypeCase_ == 4 &&
          rangedBuilder_ != null) {
        result.combatType_ = rangedBuilder_.build();
      }
      if (combatTypeCase_ == 5 &&
          magicBuilder_ != null) {
        result.combatType_ = magicBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.nkibler7.osrswikiscraper.CombatOption) {
        return mergeFrom((com.github.nkibler7.osrswikiscraper.CombatOption)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.nkibler7.osrswikiscraper.CombatOption other) {
      if (other == com.github.nkibler7.osrswikiscraper.CombatOption.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasModifiers()) {
        mergeModifiers(other.getModifiers());
      }
      switch (other.getCombatTypeCase()) {
        case MELEE: {
          mergeMelee(other.getMelee());
          break;
        }
        case RANGED: {
          mergeRanged(other.getRanged());
          break;
        }
        case MAGIC: {
          mergeMagic(other.getMagic());
          break;
        }
        case COMBATTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getModifiersFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getMeleeFieldBuilder().getBuilder(),
                  extensionRegistry);
              combatTypeCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getRangedFieldBuilder().getBuilder(),
                  extensionRegistry);
              combatTypeCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getMagicFieldBuilder().getBuilder(),
                  extensionRegistry);
              combatTypeCase_ = 5;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int combatTypeCase_ = 0;
    private java.lang.Object combatType_;
    public CombatTypeCase
        getCombatTypeCase() {
      return CombatTypeCase.forNumber(
          combatTypeCase_);
    }

    public Builder clearCombatType() {
      combatTypeCase_ = 0;
      combatType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name associated with this attack option in the Combat Options interface.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name associated with this attack option in the Combat Options interface.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name associated with this attack option in the Combat Options interface.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name associated with this attack option in the Combat Options interface.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name associated with this attack option in the Combat Options interface.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers, com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.Builder, com.github.nkibler7.osrswikiscraper.CombatOption.ModifiersOrBuilder> modifiersBuilder_;
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     * @return Whether the modifiers field is set.
     */
    public boolean hasModifiers() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     * @return The modifiers.
     */
    public com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers getModifiers() {
      if (modifiersBuilder_ == null) {
        return modifiers_ == null ? com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.getDefaultInstance() : modifiers_;
      } else {
        return modifiersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     */
    public Builder setModifiers(com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers value) {
      if (modifiersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        modifiers_ = value;
      } else {
        modifiersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     */
    public Builder setModifiers(
        com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.Builder builderForValue) {
      if (modifiersBuilder_ == null) {
        modifiers_ = builderForValue.build();
      } else {
        modifiersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     */
    public Builder mergeModifiers(com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers value) {
      if (modifiersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          modifiers_ != null &&
          modifiers_ != com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.getDefaultInstance()) {
          getModifiersBuilder().mergeFrom(value);
        } else {
          modifiers_ = value;
        }
      } else {
        modifiersBuilder_.mergeFrom(value);
      }
      if (modifiers_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     */
    public Builder clearModifiers() {
      bitField0_ = (bitField0_ & ~0x00000002);
      modifiers_ = null;
      if (modifiersBuilder_ != null) {
        modifiersBuilder_.dispose();
        modifiersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     */
    public com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.Builder getModifiersBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getModifiersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     */
    public com.github.nkibler7.osrswikiscraper.CombatOption.ModifiersOrBuilder getModifiersOrBuilder() {
      if (modifiersBuilder_ != null) {
        return modifiersBuilder_.getMessageOrBuilder();
      } else {
        return modifiers_ == null ?
            com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.getDefaultInstance() : modifiers_;
      }
    }
    /**
     * <pre>
     * The set of modifiers applied by this combat option.
     * </pre>
     *
     * <code>.github.nkibler7.osrswikiscraper.CombatOption.Modifiers modifiers = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers, com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.Builder, com.github.nkibler7.osrswikiscraper.CombatOption.ModifiersOrBuilder> 
        getModifiersFieldBuilder() {
      if (modifiersBuilder_ == null) {
        modifiersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers, com.github.nkibler7.osrswikiscraper.CombatOption.Modifiers.Builder, com.github.nkibler7.osrswikiscraper.CombatOption.ModifiersOrBuilder>(
                getModifiers(),
                getParentForChildren(),
                isClean());
        modifiers_ = null;
      }
      return modifiersBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.nkibler7.osrswikiscraper.MeleeCombatOption, com.github.nkibler7.osrswikiscraper.MeleeCombatOption.Builder, com.github.nkibler7.osrswikiscraper.MeleeCombatOptionOrBuilder> meleeBuilder_;
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     * @return Whether the melee field is set.
     */
    @java.lang.Override
    public boolean hasMelee() {
      return combatTypeCase_ == 3;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     * @return The melee.
     */
    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.MeleeCombatOption getMelee() {
      if (meleeBuilder_ == null) {
        if (combatTypeCase_ == 3) {
          return (com.github.nkibler7.osrswikiscraper.MeleeCombatOption) combatType_;
        }
        return com.github.nkibler7.osrswikiscraper.MeleeCombatOption.getDefaultInstance();
      } else {
        if (combatTypeCase_ == 3) {
          return meleeBuilder_.getMessage();
        }
        return com.github.nkibler7.osrswikiscraper.MeleeCombatOption.getDefaultInstance();
      }
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     */
    public Builder setMelee(com.github.nkibler7.osrswikiscraper.MeleeCombatOption value) {
      if (meleeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        combatType_ = value;
        onChanged();
      } else {
        meleeBuilder_.setMessage(value);
      }
      combatTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     */
    public Builder setMelee(
        com.github.nkibler7.osrswikiscraper.MeleeCombatOption.Builder builderForValue) {
      if (meleeBuilder_ == null) {
        combatType_ = builderForValue.build();
        onChanged();
      } else {
        meleeBuilder_.setMessage(builderForValue.build());
      }
      combatTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     */
    public Builder mergeMelee(com.github.nkibler7.osrswikiscraper.MeleeCombatOption value) {
      if (meleeBuilder_ == null) {
        if (combatTypeCase_ == 3 &&
            combatType_ != com.github.nkibler7.osrswikiscraper.MeleeCombatOption.getDefaultInstance()) {
          combatType_ = com.github.nkibler7.osrswikiscraper.MeleeCombatOption.newBuilder((com.github.nkibler7.osrswikiscraper.MeleeCombatOption) combatType_)
              .mergeFrom(value).buildPartial();
        } else {
          combatType_ = value;
        }
        onChanged();
      } else {
        if (combatTypeCase_ == 3) {
          meleeBuilder_.mergeFrom(value);
        } else {
          meleeBuilder_.setMessage(value);
        }
      }
      combatTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     */
    public Builder clearMelee() {
      if (meleeBuilder_ == null) {
        if (combatTypeCase_ == 3) {
          combatTypeCase_ = 0;
          combatType_ = null;
          onChanged();
        }
      } else {
        if (combatTypeCase_ == 3) {
          combatTypeCase_ = 0;
          combatType_ = null;
        }
        meleeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     */
    public com.github.nkibler7.osrswikiscraper.MeleeCombatOption.Builder getMeleeBuilder() {
      return getMeleeFieldBuilder().getBuilder();
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     */
    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.MeleeCombatOptionOrBuilder getMeleeOrBuilder() {
      if ((combatTypeCase_ == 3) && (meleeBuilder_ != null)) {
        return meleeBuilder_.getMessageOrBuilder();
      } else {
        if (combatTypeCase_ == 3) {
          return (com.github.nkibler7.osrswikiscraper.MeleeCombatOption) combatType_;
        }
        return com.github.nkibler7.osrswikiscraper.MeleeCombatOption.getDefaultInstance();
      }
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MeleeCombatOption melee = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.nkibler7.osrswikiscraper.MeleeCombatOption, com.github.nkibler7.osrswikiscraper.MeleeCombatOption.Builder, com.github.nkibler7.osrswikiscraper.MeleeCombatOptionOrBuilder> 
        getMeleeFieldBuilder() {
      if (meleeBuilder_ == null) {
        if (!(combatTypeCase_ == 3)) {
          combatType_ = com.github.nkibler7.osrswikiscraper.MeleeCombatOption.getDefaultInstance();
        }
        meleeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.nkibler7.osrswikiscraper.MeleeCombatOption, com.github.nkibler7.osrswikiscraper.MeleeCombatOption.Builder, com.github.nkibler7.osrswikiscraper.MeleeCombatOptionOrBuilder>(
                (com.github.nkibler7.osrswikiscraper.MeleeCombatOption) combatType_,
                getParentForChildren(),
                isClean());
        combatType_ = null;
      }
      combatTypeCase_ = 3;
      onChanged();
      return meleeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.nkibler7.osrswikiscraper.RangedCombatOption, com.github.nkibler7.osrswikiscraper.RangedCombatOption.Builder, com.github.nkibler7.osrswikiscraper.RangedCombatOptionOrBuilder> rangedBuilder_;
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     * @return Whether the ranged field is set.
     */
    @java.lang.Override
    public boolean hasRanged() {
      return combatTypeCase_ == 4;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     * @return The ranged.
     */
    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.RangedCombatOption getRanged() {
      if (rangedBuilder_ == null) {
        if (combatTypeCase_ == 4) {
          return (com.github.nkibler7.osrswikiscraper.RangedCombatOption) combatType_;
        }
        return com.github.nkibler7.osrswikiscraper.RangedCombatOption.getDefaultInstance();
      } else {
        if (combatTypeCase_ == 4) {
          return rangedBuilder_.getMessage();
        }
        return com.github.nkibler7.osrswikiscraper.RangedCombatOption.getDefaultInstance();
      }
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     */
    public Builder setRanged(com.github.nkibler7.osrswikiscraper.RangedCombatOption value) {
      if (rangedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        combatType_ = value;
        onChanged();
      } else {
        rangedBuilder_.setMessage(value);
      }
      combatTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     */
    public Builder setRanged(
        com.github.nkibler7.osrswikiscraper.RangedCombatOption.Builder builderForValue) {
      if (rangedBuilder_ == null) {
        combatType_ = builderForValue.build();
        onChanged();
      } else {
        rangedBuilder_.setMessage(builderForValue.build());
      }
      combatTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     */
    public Builder mergeRanged(com.github.nkibler7.osrswikiscraper.RangedCombatOption value) {
      if (rangedBuilder_ == null) {
        if (combatTypeCase_ == 4 &&
            combatType_ != com.github.nkibler7.osrswikiscraper.RangedCombatOption.getDefaultInstance()) {
          combatType_ = com.github.nkibler7.osrswikiscraper.RangedCombatOption.newBuilder((com.github.nkibler7.osrswikiscraper.RangedCombatOption) combatType_)
              .mergeFrom(value).buildPartial();
        } else {
          combatType_ = value;
        }
        onChanged();
      } else {
        if (combatTypeCase_ == 4) {
          rangedBuilder_.mergeFrom(value);
        } else {
          rangedBuilder_.setMessage(value);
        }
      }
      combatTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     */
    public Builder clearRanged() {
      if (rangedBuilder_ == null) {
        if (combatTypeCase_ == 4) {
          combatTypeCase_ = 0;
          combatType_ = null;
          onChanged();
        }
      } else {
        if (combatTypeCase_ == 4) {
          combatTypeCase_ = 0;
          combatType_ = null;
        }
        rangedBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     */
    public com.github.nkibler7.osrswikiscraper.RangedCombatOption.Builder getRangedBuilder() {
      return getRangedFieldBuilder().getBuilder();
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     */
    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.RangedCombatOptionOrBuilder getRangedOrBuilder() {
      if ((combatTypeCase_ == 4) && (rangedBuilder_ != null)) {
        return rangedBuilder_.getMessageOrBuilder();
      } else {
        if (combatTypeCase_ == 4) {
          return (com.github.nkibler7.osrswikiscraper.RangedCombatOption) combatType_;
        }
        return com.github.nkibler7.osrswikiscraper.RangedCombatOption.getDefaultInstance();
      }
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.RangedCombatOption ranged = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.nkibler7.osrswikiscraper.RangedCombatOption, com.github.nkibler7.osrswikiscraper.RangedCombatOption.Builder, com.github.nkibler7.osrswikiscraper.RangedCombatOptionOrBuilder> 
        getRangedFieldBuilder() {
      if (rangedBuilder_ == null) {
        if (!(combatTypeCase_ == 4)) {
          combatType_ = com.github.nkibler7.osrswikiscraper.RangedCombatOption.getDefaultInstance();
        }
        rangedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.nkibler7.osrswikiscraper.RangedCombatOption, com.github.nkibler7.osrswikiscraper.RangedCombatOption.Builder, com.github.nkibler7.osrswikiscraper.RangedCombatOptionOrBuilder>(
                (com.github.nkibler7.osrswikiscraper.RangedCombatOption) combatType_,
                getParentForChildren(),
                isClean());
        combatType_ = null;
      }
      combatTypeCase_ = 4;
      onChanged();
      return rangedBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.nkibler7.osrswikiscraper.MagicCombatOption, com.github.nkibler7.osrswikiscraper.MagicCombatOption.Builder, com.github.nkibler7.osrswikiscraper.MagicCombatOptionOrBuilder> magicBuilder_;
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     * @return Whether the magic field is set.
     */
    @java.lang.Override
    public boolean hasMagic() {
      return combatTypeCase_ == 5;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     * @return The magic.
     */
    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.MagicCombatOption getMagic() {
      if (magicBuilder_ == null) {
        if (combatTypeCase_ == 5) {
          return (com.github.nkibler7.osrswikiscraper.MagicCombatOption) combatType_;
        }
        return com.github.nkibler7.osrswikiscraper.MagicCombatOption.getDefaultInstance();
      } else {
        if (combatTypeCase_ == 5) {
          return magicBuilder_.getMessage();
        }
        return com.github.nkibler7.osrswikiscraper.MagicCombatOption.getDefaultInstance();
      }
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     */
    public Builder setMagic(com.github.nkibler7.osrswikiscraper.MagicCombatOption value) {
      if (magicBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        combatType_ = value;
        onChanged();
      } else {
        magicBuilder_.setMessage(value);
      }
      combatTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     */
    public Builder setMagic(
        com.github.nkibler7.osrswikiscraper.MagicCombatOption.Builder builderForValue) {
      if (magicBuilder_ == null) {
        combatType_ = builderForValue.build();
        onChanged();
      } else {
        magicBuilder_.setMessage(builderForValue.build());
      }
      combatTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     */
    public Builder mergeMagic(com.github.nkibler7.osrswikiscraper.MagicCombatOption value) {
      if (magicBuilder_ == null) {
        if (combatTypeCase_ == 5 &&
            combatType_ != com.github.nkibler7.osrswikiscraper.MagicCombatOption.getDefaultInstance()) {
          combatType_ = com.github.nkibler7.osrswikiscraper.MagicCombatOption.newBuilder((com.github.nkibler7.osrswikiscraper.MagicCombatOption) combatType_)
              .mergeFrom(value).buildPartial();
        } else {
          combatType_ = value;
        }
        onChanged();
      } else {
        if (combatTypeCase_ == 5) {
          magicBuilder_.mergeFrom(value);
        } else {
          magicBuilder_.setMessage(value);
        }
      }
      combatTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     */
    public Builder clearMagic() {
      if (magicBuilder_ == null) {
        if (combatTypeCase_ == 5) {
          combatTypeCase_ = 0;
          combatType_ = null;
          onChanged();
        }
      } else {
        if (combatTypeCase_ == 5) {
          combatTypeCase_ = 0;
          combatType_ = null;
        }
        magicBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     */
    public com.github.nkibler7.osrswikiscraper.MagicCombatOption.Builder getMagicBuilder() {
      return getMagicFieldBuilder().getBuilder();
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     */
    @java.lang.Override
    public com.github.nkibler7.osrswikiscraper.MagicCombatOptionOrBuilder getMagicOrBuilder() {
      if ((combatTypeCase_ == 5) && (magicBuilder_ != null)) {
        return magicBuilder_.getMessageOrBuilder();
      } else {
        if (combatTypeCase_ == 5) {
          return (com.github.nkibler7.osrswikiscraper.MagicCombatOption) combatType_;
        }
        return com.github.nkibler7.osrswikiscraper.MagicCombatOption.getDefaultInstance();
      }
    }
    /**
     * <code>.github.nkibler7.osrswikiscraper.MagicCombatOption magic = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.nkibler7.osrswikiscraper.MagicCombatOption, com.github.nkibler7.osrswikiscraper.MagicCombatOption.Builder, com.github.nkibler7.osrswikiscraper.MagicCombatOptionOrBuilder> 
        getMagicFieldBuilder() {
      if (magicBuilder_ == null) {
        if (!(combatTypeCase_ == 5)) {
          combatType_ = com.github.nkibler7.osrswikiscraper.MagicCombatOption.getDefaultInstance();
        }
        magicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.nkibler7.osrswikiscraper.MagicCombatOption, com.github.nkibler7.osrswikiscraper.MagicCombatOption.Builder, com.github.nkibler7.osrswikiscraper.MagicCombatOptionOrBuilder>(
                (com.github.nkibler7.osrswikiscraper.MagicCombatOption) combatType_,
                getParentForChildren(),
                isClean());
        combatType_ = null;
      }
      combatTypeCase_ = 5;
      onChanged();
      return magicBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:github.nkibler7.osrswikiscraper.CombatOption)
  }

  // @@protoc_insertion_point(class_scope:github.nkibler7.osrswikiscraper.CombatOption)
  private static final com.github.nkibler7.osrswikiscraper.CombatOption DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.nkibler7.osrswikiscraper.CombatOption();
  }

  public static com.github.nkibler7.osrswikiscraper.CombatOption getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CombatOption>
      PARSER = new com.google.protobuf.AbstractParser<CombatOption>() {
    @java.lang.Override
    public CombatOption parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CombatOption> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CombatOption> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.nkibler7.osrswikiscraper.CombatOption getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

