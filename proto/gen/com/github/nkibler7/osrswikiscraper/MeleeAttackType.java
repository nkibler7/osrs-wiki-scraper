// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: weapons.proto

package com.github.nkibler7.osrswikiscraper;

/**
 * <pre>
 * The type of the melee attack, which corresponds to specific stat bonuses used when calculating
 * damage &amp; defence rolls between players &amp; monsters.
 * </pre>
 *
 * Protobuf enum {@code github.nkibler7.osrswikiscraper.MeleeAttackType}
 */
public enum MeleeAttackType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * The default (unspecified) value.
   * </pre>
   *
   * <code>MELEE_ATTACK_TYPE_UNSPECIFIED = 0;</code>
   */
  MELEE_ATTACK_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * The type that does stab-based damage. This melee type will do more damage to players &amp; monsters
   * with a specific weakness to stab attacks.
   * </pre>
   *
   * <code>MELEE_ATTACK_TYPE_STAB = 1;</code>
   */
  MELEE_ATTACK_TYPE_STAB(1),
  /**
   * <pre>
   * The type that does slash-based damage. This melee type will do more damage to players &amp;
   * monsters with a specific weakness to slash attacks.
   * </pre>
   *
   * <code>MELEE_ATTACK_TYPE_SLASH = 2;</code>
   */
  MELEE_ATTACK_TYPE_SLASH(2),
  /**
   * <pre>
   * The type that does crush-based damage. This melee type will do more damage to players &amp;
   * monsters with a specific weakness to crush attacks.
   * </pre>
   *
   * <code>MELEE_ATTACK_TYPE_CRUSH = 3;</code>
   */
  MELEE_ATTACK_TYPE_CRUSH(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * The default (unspecified) value.
   * </pre>
   *
   * <code>MELEE_ATTACK_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int MELEE_ATTACK_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * The type that does stab-based damage. This melee type will do more damage to players &amp; monsters
   * with a specific weakness to stab attacks.
   * </pre>
   *
   * <code>MELEE_ATTACK_TYPE_STAB = 1;</code>
   */
  public static final int MELEE_ATTACK_TYPE_STAB_VALUE = 1;
  /**
   * <pre>
   * The type that does slash-based damage. This melee type will do more damage to players &amp;
   * monsters with a specific weakness to slash attacks.
   * </pre>
   *
   * <code>MELEE_ATTACK_TYPE_SLASH = 2;</code>
   */
  public static final int MELEE_ATTACK_TYPE_SLASH_VALUE = 2;
  /**
   * <pre>
   * The type that does crush-based damage. This melee type will do more damage to players &amp;
   * monsters with a specific weakness to crush attacks.
   * </pre>
   *
   * <code>MELEE_ATTACK_TYPE_CRUSH = 3;</code>
   */
  public static final int MELEE_ATTACK_TYPE_CRUSH_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static MeleeAttackType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static MeleeAttackType forNumber(int value) {
    switch (value) {
      case 0: return MELEE_ATTACK_TYPE_UNSPECIFIED;
      case 1: return MELEE_ATTACK_TYPE_STAB;
      case 2: return MELEE_ATTACK_TYPE_SLASH;
      case 3: return MELEE_ATTACK_TYPE_CRUSH;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<MeleeAttackType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      MeleeAttackType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<MeleeAttackType>() {
          public MeleeAttackType findValueByNumber(int number) {
            return MeleeAttackType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.github.nkibler7.osrswikiscraper.WeaponsOuterClass.getDescriptor().getEnumTypes().get(1);
  }

  private static final MeleeAttackType[] VALUES = values();

  public static MeleeAttackType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private MeleeAttackType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:github.nkibler7.osrswikiscraper.MeleeAttackType)
}

